{"version":3,"sources":["utils.ts","components/Sidebar.tsx","components/Topbar.tsx","lib/lighthouse/AccessibilityWarnings.tsx","components/Grade.tsx","components/Dashboard.tsx","components/Panel.tsx","components/HTTP.tsx","components/Gauge.tsx","components/LightHouse.tsx","lib/lighthouse/getPerformanceScore.ts","components/Nuclei.tsx","components/Owasp.tsx","components/TestSSL.tsx","components/Trackers.tsx","components/Wappalyzer.tsx","components/UpdownIo.tsx","components/Dependabot.tsx","components/Codescan.tsx","components/Nmap.tsx","components/Url.tsx","components/Intro.tsx","components/ScrollToTop.tsx","components/About.tsx","components/WappalyzerDashboard.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","getLastUrlSegment","substring","lastIndexOf","isToolEnabled","name","dashlordConfig","require","tools","Array","isArray","length","includes","letterGradeValue","grade","A","B","C","D","E","F","Sidebar","key","report","sortedReport","sort","a","b","categories","uniq","filter","u","category","map","Nav","className","to","activeClassName","exact","size","style","marginTop","marginRight","whiteSpace","Topbar","Navbar","variant","bg","sticky","expand","justifyContent","height","fontSize","color","title","AccessibilityWarnings","grades","Grade","label","small","newGrade","toUpperCase","Badge","minWidth","undefined","IconUnknown","ColumnHeader","info","warning","textAlign","placement","trigger","overlay","maxWidth","cursor","stroke","marginLeft","defaultSort","order","column","dataKey","percent","num","Math","floor","defaultColumnProps","width","sortable","align","lighthouseColumnProps","id","headerRenderer","dataGetter","summary","rowData","scoreKey","cellRenderer","gradeKey","pathname","encodeURIComponent","hash","GradeBadge","Dashboard","useState","sortBy","setSortBy","onColumnSort","useMemo","rows","orderBy","row","data","flexGrow","testsslGrade","httpGrade","uptime","uptimeGrade","apdex","apdexGrade","dependabotGrade","dependabotCount","codescanCount","codescanGrade","nmapGrade","nmapOpenPortsCount","nmapOpenPortsGrade","trackersCount","trackersGrade","cookiesCount","cookiesGrade","Panel","children","Card","marginBottom","Title","background","padding","fontWeight","float","href","target","rel","Body","HttpRowBadge","scoreModifier","score_modifier","helpDocs","cookies","HTTP","failures","Object","keys","details","pass","Table","striped","bordered","hover","failure","i","score_description","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","set","value","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","strokeColor","generateGradient","highDpiSupport","toTime","ms","minutes","seconds","rest","toFixed","toSize","bytes","factor","mb","kb","LightHouse","audits","metrics","highlights","items","firstContentfulPaint","interactive","diagnostics","numRequests","totalByteWeight","score","maxByteWeight","min","max","getPerformanceScore","Row","Col","xs","isNaN","md","lg","NucleiBadge","severity","nucleiSeverities","split","nucleiOrder","indexOf","Nuclei","templateID","matcher_name","orderBySeverity","parseInt","riskcode","confidence","OwaspBadge","riskdesc","Owasp","alerts","site","flatMap","alert","severities","TestSSL","gradeEntry","find","entry","finding","severity_value","reverse","capReasons","reason","Alert","CookiesTable","colSpan","cookie","domain","httpOnly","secure","TrackersTable","trackers","tracker","type","message","EndPointsTable","endpoints","endpoint","Flag","geoip","country","Flags","iso_code","names","fr","hostname","ip","city","Trackers","hasIssues","push","Wappalyzer","technologies","techno","cat","join","website","UpdownIo","urlUpdownio","token","timings","total","ssl","valid","format","Date","expires_at","locale","frLocale","Map","get","securityVulnerability","DependabotBadge","node","Dependabot","nodes","vulnerabilityAlerts","totalCount","package","advisory","references","reference","rule","CodescanBadge","Codescan","html_url","description","sumCvss","vulnerability","Number","parseFloat","cvss","orderByCvss","service","vulnerabilities","reduce","hasExploit","open_port","is_exploit","NmapBadge","Nmap","open_ports","host","Anchor","Url","updateDate","lhr","fetchTime","React","document","location","getElementById","scrollIntoView","Jumbotron","paddingTop","flex","tags","tag","formatDistanceToNow","screenshot","alt","position","top","maxHeight","border","src","process","window","btoa","dependabot","repositories","Boolean","repository","codescan","updownio","testssl","nmap","http","thirdparties","zap","nuclei","wappalyzer","Intro","Button","ScrollToTop","useLocation","scrollTo","About","margin","UsageChart","BarChart","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Legend","Bar","fill","toChartData","item","count","urls","WappalyzerDashboard","allTechnologies","categoriesNames","t","c","getTechUrl","byTech","sortedTechs","getCategoriesByUrl","CardColumns","CategoryRoute","params","useParams","decodeURIComponent","TagRoute","UrlRoute","urlData","App","Container","fluid","role","path","ReactDOM"],"mappings":"g0i5GAAaA,EAAW,SAACC,GAAD,OACtBA,EACGC,cACAC,QAAQ,eAAgB,IACxBA,QAAQ,MAAO,KAQPC,EAAoB,SAACH,GAAD,OAC/BA,EAAII,UAAUJ,EAAIK,YAAY,KAAO,IAW1BC,EAAgB,SAACC,GAC5B,IAAMC,EAAiCC,EAAQ,KAC/C,OAAKD,EAAeE,QAChBC,MAAMC,QAAQJ,EAAeE,SACdF,EAAeE,OAASF,EAAeE,MAAMG,YAGzDL,EAAeE,QAASF,EAAeE,MAAMI,SAASP,KAGrB,IAA/BC,EAAeE,MAAMH,KAInBQ,EAAmB,SAACC,GAC/B,MACE,CACE,KAAM,IACNC,EAAG,IACH,KAAM,IACN,KAAM,IACNC,EAAG,IACH,KAAM,IACN,KAAM,IACNC,EAAG,IACH,KAAM,IACN,KAAM,IACNC,EAAG,IACH,KAAM,GACN,KAAM,GACNC,EAAG,GACH,KAAM,GACN,KAAM,GACNC,EAAG,GACH,KAAM,IACNN,IAAU,G,OC9CHO,EAAkC,SAAC,GAAgB,IDEtCC,ECFwBC,EAAa,EAAbA,OAC1CC,EAAgBD,GAAUA,EAAOE,MDCfH,ECD8B,MDCd,SAACI,EAAQC,GACjD,OAAID,EAAEJ,GAAOK,EAAEL,GACN,EACEI,EAAEJ,GAAOK,EAAEL,IACZ,EAEH,MCP2D,GAC5DM,EAAaC,IACjBL,EAAaM,QAAO,SAACC,GAAD,OAAOA,EAAEC,YAAUC,KAAI,SAACF,GAAD,OAAOA,EAAEC,aACpDP,OACF,OACE,cAACS,EAAA,EAAD,CAAKC,UAAU,yDAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,kBAAd,SACE,qBAAIA,UAAU,WAAd,UACE,eAAC,IAAD,CACEC,GAAG,IACHD,UAAU,WACVE,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CAAMC,KAAM,GAAIC,MAAO,CAAEC,WAAY,EAAGC,YAAa,KANvD,aASA,eAAC,IAAD,CACEN,GAAG,SACHD,UAAU,WACVE,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CAAUC,KAAM,GAAIC,MAAO,CAAEC,WAAY,EAAGC,YAAa,KAN3D,uBAYFd,EAAWjB,OAAS,GACpB,eAAC,WAAD,WACE,oBAAIwB,UAAU,8FAAd,SACE,mDAEF,oBAAIA,UAAU,kBAAd,SACGP,EAAWK,KAAI,SAACD,GAAD,OACd,oBACEG,UAAU,WAEVK,MAAO,CACLG,WAAY,OAJhB,SAOE,eAAC,IAAD,CACER,UAAU,WACVC,GAAE,oBAAeJ,GACjBK,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CACEC,KAAM,GACNC,MAAO,CAAEC,WAAY,EAAGC,YAAa,KAEtCV,MAfEA,YAsBb,KAED5B,EAAc,eACb,gCACE,oBAAI+B,UAAU,8FAAd,SACE,8CAEF,oBAAIA,UAAU,kBAAd,SACE,oBACEA,UAAU,WACVK,MAAO,CACLG,WAAY,OAHhB,SAME,eAAC,IAAD,CACER,UAAU,WACVC,GAAE,cACFC,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CACEC,KAAM,GACNC,MAAO,CAAEC,WAAY,EAAGC,YAAa,KARzC,0BAeL,KAEH,oBAAIP,UAAU,8FAAd,SACE,0CAGF,oBAAIA,UAAU,kBAAd,SACGX,EAAaS,KAAI,SAACnC,GAAD,OAChB,oBACEqC,UAAU,WAEVK,MAAO,CACLG,WAAY,OAJhB,SAOE,eAAC,IAAD,CACER,UAAU,WACVC,GAAE,eAAUtC,EAAIA,KAChBuC,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CAAQC,KAAM,GAAIC,MAAO,CAAEC,WAAY,EAAGC,YAAa,KACtD7C,EAASC,EAAIA,SAZXA,EAAIA,gB,2BC5GV8C,EAAS,kBACpB,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,GAAG,OACHC,OAAO,MACPC,OAAO,KACPd,UAAU,4BACVK,MAAO,CAAEU,eAAgB,iBAN3B,UAQE,cAAC,IAAD,CAAMd,GAAG,IAAT,SACE,sBACED,UAAU,OACVK,MAAO,CAAEW,OAAQ,GAAIC,SAAU,SAAUC,MAAO,gBAFlD,UAIE,cAAC,IAAD,CAAOd,KAAM,GAAIC,MAAO,CAAEC,WAAY,EAAGC,YAAa,MAJxD,gBAQF,cAAC,IAAD,CAAMY,MAAM,cAAWlB,GAAG,SAASI,MAAO,CAAEa,MAAO,QAASX,YAAa,GAAzE,SAA8E,cAAC,IAAD,U,uFClBrEa,EAAwB,SAAC,GAAD,IAAGf,EAAH,EAAGA,MAAH,OACnC,sBAAKA,MAAOA,EAAZ,wGAEmB,wEAFnB,IAGE,uBACA,uBAJF,+G,SCGIgB,EAAS,CACbzC,EAAG,UACHC,EAAG,OACHC,EAAG,OACHC,EAAG,UACHC,EAAG,SACHC,EAAG,UAGQqC,EAA8B,SAAC,GAA6B,IAA3B3C,EAA0B,EAA1BA,MAAO4C,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACpDC,GAAY9C,EAAQ,IAAIZ,UAAU,EAAG,GAAG2D,cACxCf,EAAUU,EAAOI,IAAa,SAEpC,OACE,cAACE,EAAA,EAAD,CACEhB,QAASA,EACTN,MAAO,CAAEuB,SAAU,GAAIX,SAAUO,EAAQ,QAAU,OAFrD,cAIaK,IAAVN,EAAsBA,EAAQ5C,KCR/BmD,EAAc,kBAAM,cAAC,IAAD,CAAO1B,KAAM,MAQjC2B,EAA4C,SAAC,GAAD,IAChDZ,EADgD,EAChDA,MACAa,EAFgD,EAEhDA,KACAC,EAHgD,EAGhDA,QAHgD,OAKhD,sBAAK5B,MAAO,CAAE6B,UAAW,UAAzB,UACE,uBAAM7B,MAAO,CAAEY,SAAU,SAAzB,UACGE,EACD,uBACA,cAAC,IAAD,CACEgB,UAAU,SACVC,QAAS,CAAC,SACVC,QAAS,qBAAKhC,MAAO,CAAEiC,SAAU,KAAxB,SAAgCN,IAH3C,SAKE,cAAC,IAAD,CAAM5B,KAAM,GAAIC,MAAO,CAAEkC,OAAQ,kBAIpCN,GACC,cAAC,IAAD,CACEE,UAAU,SACVC,QAAS,CAAC,SACVC,QAAS,qBAAKhC,MAAO,CAAEiC,SAAU,KAAxB,SAAgCL,IAH3C,SAKE,cAAC,IAAD,CACE7B,KAAM,GACNC,MAAO,CACLmC,OAAQ,gBACRC,WAAY,EACZF,OAAQ,mBAcdG,EAAc,CAClBvD,IAAK,MACLwD,MAAO,MACPC,OAAQ,CAAEC,QAAS,QAGfC,EAAU,SAACC,GAAD,YACLlB,IAARkB,GAAqBC,KAAKC,MAAY,IAANF,GAAa,MAAS,KAEnDG,EAAqB,CACzBC,MAAO,IACPC,UAAU,EACVC,MAAO,UAOHC,EAAwB,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,GACApC,EAF4B,EAE5BA,MACAa,EAH4B,EAG5BA,KACAC,EAJ4B,EAI5BA,QAJ4B,MAUvB,CACLuB,eAAgB,WACd,OAAO,cAAC,EAAD,CAAcrC,MAAOA,EAAOa,KAAMA,EAAMC,QAASA,KAE1DwB,WAAY,YAAoC,IACxCC,EADuC,EAAhCC,QAC0BD,QACjCE,EAAQ,qBAAiBL,GAE/B,YAA0B1B,IAAtB6B,EAAQE,IACF,EAGHF,EAAQE,IAEjBC,aAAc,YAAoC,IAAjCF,EAAgC,EAAhCA,QACTD,EAAWC,EAAsBD,QACjCI,EAAQ,qBAAiBP,EAAjB,SACRK,EAAQ,qBAAiBL,GAC/B,OACE,cAAC,IAAD,CACEtD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBAAoBL,EAAsBhG,MAC5DsG,KAAM,cAHV,SAME,cAAC,EAAD,CAEEtF,MAAO+E,EAAQI,GAEfvC,MAAOuB,EAAQY,EAAQE,WAO3BM,EAAa,SAAC,GAAD,IACjBvF,EADiB,EACjBA,MACA4C,EAFiB,EAEjBA,MAFiB,OAMZ5C,EAAQ,cAAC,EAAD,CAAO6C,OAAK,EAAC7C,MAAOA,EAAO4C,MAAOA,IAAY,cAAC,EAAD,KAEhD4C,EAAsC,SAAC,GAAgB,IAAd/E,EAAa,EAAbA,OACpD,EAA4BgF,mBAAS1B,GAArC,mBAAO2B,EAAP,KAAeC,EAAf,KACMC,EAAe,SAAC3B,GACpB0B,EAAU1B,IAGNvD,EAAemF,mBAAQ,WAC3B,IAAuBC,EAevB,OAfuBA,EAeFrF,EAdZsF,IACLD,GACA,SAACE,GACC,OAAIN,EAAOzB,OAAOa,WAETY,EAAOzB,OAAOa,WAAW,CAAEE,QAASgB,IAClCN,EAAOzB,OAAOzD,IAChBwF,EAAIN,EAAOzB,OAAOzD,UADpB,IAITkF,EAAO1B,SAKV,CAAC0B,EAAQjF,IACZ,OACE,qBAAKiB,MAAO,CAAE8C,MAAO,OAAQnC,OAAQ,sBAArC,SACE,cAAC,IAAD,UACG,gBAAGmC,EAAH,EAAGA,MAAOnC,EAAV,EAAUA,OAAV,OACC,eAAC,IAAD,CACE4D,KAAMvF,EACN8D,MAAOA,EACPnC,OAAQA,EACRqD,OAAQA,EACRE,aAAcA,EALhB,UAOE,cAAC,IAAD,CAEEpD,MAAM,MACNiC,UAAU,EACVD,MAAO,IACP0B,SAAU,EACVhB,aAAc,gBAAGF,EAAH,EAAGA,QAAH,OACZ,eAAC,IAAD,CACE1D,GAAE,eAAU+D,mBAAoBL,EAAsBhG,MADxD,UAGE,cAAC,IAAD,CAAQyC,KAAM,KAHhB,OAIS1C,EAAUiG,EAAsBhG,UAVvC,OAcLM,EAAc,eACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,iBACAmE,EAAsB,CACxBC,GAAI,gBACJpC,MAAO,mBACPa,KAAM,qEACNC,QAAS,cAAC,EAAD,QAIdhE,EAAc,eACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,eACAmE,EAAsB,CACxBC,GAAI,cACJpC,MAAO,cACPa,KAAM,4DAIX/D,EAAc,eACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,OACAmE,EAAsB,CACxBC,GAAI,MACJpC,MAAO,MACPa,KAAM,iFAKX/D,EAAc,YACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,MACJsE,WAAY,YAAoC,IACxCC,EADuC,EAAhCC,QAC0BD,QACvC,OACGA,EAAQoB,cACPpG,EAAiBgF,EAAQoB,gBAC1B,GAGLtB,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,MACNa,KAAK,wDAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,WALV,SAQE,cAAC,EAAD,CAAYtF,MAAO+E,EAAQoB,qBAOpC7G,EAAc,SACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,OACJsE,WAAY,YAAkB,IACtBC,EADqB,EAAdC,QAC0BD,QACvC,OACGA,EAAQqB,WACPrG,EAAiBgF,EAAQqB,aAC1B,GAGLvB,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,OACNa,KAAK,kEAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,QALV,SAQE,cAAC,EAAD,CAAYtF,MAAO+E,EAAQqB,kBAOpC9G,EAAc,aACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,WACJsE,WAAY,YAEV,OAF2B,EAAdE,QAC0BD,QACxBsB,SAAW,GAE5BxB,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,mBACNa,KAAK,6CAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,YALV,SAQE,cAAC,EAAD,CACEtF,MAAO+E,EAAQuB,YACf1D,MAAOuB,GAASY,EAAQsB,QAAU,GAAK,aAOlD/G,EAAc,aACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,YACJsE,WAAY,YAEV,OAF2B,EAAdE,QAC0BD,QACxBwB,QAAU,GAE3B1B,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,QACNa,KAAK,2GAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,YALV,SAQE,cAAC,EAAD,CACEtF,MAAO+E,EAAQyB,WACf5D,MAAOmC,EAAQwB,cAQ1BjH,EAAc,eACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,aACJsE,WAAY,YAEV,OAF2B,EAAdE,QAC0BD,QACxB0B,iBAEjB5B,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,uBACNa,KAAK,iGAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,cALV,SAQE,cAAC,EAAD,CACEtF,MAAO+E,EAAQ0B,gBACf7D,MAAOmC,EAAQ2B,wBAQ1BpH,EAAc,aACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,WACJsE,WAAY,YAEV,OAF2B,EAAdE,QAC0BD,QACxB4B,eAEjB9B,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,SACNa,KAAK,iGAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,YALV,SAQE,cAAC,EAAD,CACEtF,MAAO+E,EAAQ6B,cACfhE,MAAOmC,EAAQ4B,sBAQ1BrH,EAAc,SACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,OACJsE,WAAY,YAAkB,IACtBC,EADqB,EAAdC,QAC0BD,QACvC,OACGA,EAAQ8B,WACP9G,EAAiBgF,EAAQ8B,aAC1B,GAGLhC,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,OACNa,KAAK,0DAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,QALV,SAQE,cAAC,EAAD,CAAYtF,MAAO+E,EAAQ8B,kBAOpCvH,EAAc,SACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,QACJsE,WAAY,YAEV,OAF2B,EAAdE,QAC0BD,QACxB+B,oBAEjBjC,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,gBACNa,KAAK,+CAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,QALV,SAQE,cAAC,EAAD,CACEtF,MAAO+E,EAAQgC,mBACfnE,MAAOmC,EAAQ+B,2BAQ1BxH,EAAc,iBACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,WACJsE,WAAY,YAEV,OAF2B,EAAdE,QAC0BD,QACxBiC,eAEjBnC,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,WACNa,KAAK,4CACLC,QACE,6HAON4B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,gBALV,SAQE,cAAC,EAAD,CACEtF,MAAO+E,EAAQkC,cACfrE,MAAOmC,EAAQiC,sBAO1B1H,EAAc,iBACb,wBAAC,IAAD,2BACMiF,GADN,IAEE/D,IAAI,UACJsE,WAAY,YAEV,OAF2B,EAAdE,QAC0BD,QACxBmC,cAEjBrC,eAAgB,kBACd,cAAC,EAAD,CACErC,MAAM,UACNa,KAAK,mCAGT6B,aAAc,YAAkB,IAAfF,EAAc,EAAdA,QACTD,EAAWC,EAAsBD,QACvC,OACE,cAAC,IAAD,CACEzD,GAAI,CACF8D,SAAS,QAAD,OAAUC,mBACfL,EAAsBhG,MAEzBsG,KAAM,gBALV,SAQE,cAAC,EAAD,CACEtF,MAAO+E,EAAQoC,aACfvE,MAAOmC,EAAQmC,8B,wECpjB1BE,GAA8B,SAAC,GAAD,IAAG5E,EAAH,EAAGA,MAAO6E,EAAV,EAAUA,SAAUhE,EAApB,EAAoBA,KAAMrE,EAA1B,EAA0BA,IAAK0C,EAA/B,EAA+BA,MAAOL,EAAtC,EAAsCA,UAAtC,OACzC,eAACiG,EAAA,EAAD,CAAM5F,MAAK,aAAI6F,aAAc,IAAO7F,GAASL,UAAWA,EAAxD,UACE,eAACiG,EAAA,EAAKE,MAAN,CAAY9F,MAAO,CAAE+F,WAAY,UAAWlF,MAAO,QAASmF,QAAS,IAArE,UACGlF,EACAa,GACC,sBACE3B,MAAO,CAAEiG,WAAY,SAAUrF,SAAU,QAASwB,WAAY,IADhE,SAGGT,IAGJrE,GACC,mBACE0C,MAAO,CAAEa,MAAO,QAASqF,MAAO,SAChCC,KAAM7I,EACN8I,OAAO,SACPC,IAAI,sBAJN,SAME,cAAC,IAAD,SAIN,cAACT,EAAA,EAAKU,KAAN,UAAYX,QC3BVY,GAAe,SAACjC,GACpB,IAAMkC,EAAgBlC,EAAImC,eACpBnG,EACJkG,GAAiB,IAEbA,GAAiB,GADjB,SAGAA,GAAiB,GACjB,UACAA,GAAiB,GACjB,OACA,UACN,OACE,cAAClF,EAAA,EAAD,CAAO3B,UAAU,QAAQW,QAASA,EAAlC,SACGkG,KAMDE,GAAW,CACf,0BACE,eAAC,WAAD,WACE,mBACEL,IAAI,sBACJD,OAAO,SACPD,KAAK,mEAHP,yCADF,gBAQgB,IACd,mBACEA,KAAK,sCACLE,IAAI,sBACJD,OAAO,SAHT,yCAMK,IAfP,4DAmBF,kBACE,eAAC,WAAD,WACE,mBACEC,IAAI,sBACJD,OAAO,SACPD,KAAK,yEAHP,wCADF,OAWF,4BACE,eAAC,WAAD,WACE,mBACEE,IAAI,sBACJD,OAAO,SACPD,KAAK,sFAHP,yDADF,OAWF,yBACE,eAAC,WAAD,WACE,mBACEE,IAAI,sBACJD,OAAO,SACPD,KAAK,gFAHP,+CADF,OAWF,mBACE,eAAC,WAAD,WACE,mBACEE,IAAI,sBACJD,OAAO,SACPD,KAAK,6EAHP,yCADF,OAWFQ,QACE,eAAC,WAAD,WACE,mBACEN,IAAI,sBACJD,OAAO,SACPD,KAAK,6FAHP,kDADF,OAWF,wBACE,eAAC,WAAD,WACE,mBACEE,IAAI,sBACJD,OAAO,SACPD,KAAK,2EAHP,uCADF,QAaSS,GAAO,SAAC,GAAyB,IAAvBrC,EAAsB,EAAtBA,KACrB,IAAKA,EAAKjH,IACR,OAAO,KAET,IAAMA,EACHiH,GAAI,kDAA+ClH,EAASkH,EAAKjH,OAClE,KACIuJ,EAAWC,OAAOC,KAAKxC,EAAKyC,SAC/B1H,QAAO,SAACR,GAAD,OAAUyF,EAAKyC,QAAQlI,GAAKmI,QACnCxH,KAAI,SAACX,GAAD,OAASyF,EAAKyC,QAAQlI,MAG7B,OAFA+H,EAAS5H,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEuH,eAAiBtH,EAAEsH,kBAG1CnJ,GACC,eAAC,GAAD,CACEwD,MAAM,OACNa,KAAK,6DACLrE,IAAKA,EAHP,UAKE,iDACiB,cAAC,EAAD,CAAO6D,OAAK,EAAC7C,MAAOiG,EAAKjG,WAE1C,uBACEuI,EAAS1I,QACT,eAAC,WAAD,WACE,uBACA,eAAC+I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIrH,MAAO,CAAE8C,MAAO,KAApB,oBACA,6CACA,oDAGJ,gCACG+D,EAASpH,KAAI,SAAC6H,EAASC,GAAV,OACZ,+BACE,6BACE,cAAC,GAAD,eAAkBD,MAEpB,6BAAKA,EAAQE,oBACb,6BAGId,GAASY,EAAQzJ,OAAS,QARvByJ,EAAQzJ,KAAO0J,eAiBhC,SAGN,M,oBC7JSE,GAA8B,SAACC,GAC1C,IAAMC,EAASC,mBACTC,EAAOD,mBACPE,EAAQF,mBAEdG,qBAAU,WACRD,EAAME,QAAUN,EAAMO,MAClB,IAAIC,SAAMP,EAAOK,SACjB,IAAIG,SAAYR,EAAOK,SAC3BF,EAAME,QAAQI,aAAaP,EAAKG,SAChCF,EAAME,QAAQK,WAAWX,EAAMY,SAC/BR,EAAME,QAAQO,SAAWb,EAAMa,SAC/BT,EAAME,QAAQQ,YAAYd,EAAMe,UAChCX,EAAME,QAAQU,eAAiBhB,EAAMgB,eACrCZ,EAAME,QAAQW,IAAIjB,EAAMkB,SACvB,CAAClB,EAAMO,QAEVF,qBAAU,WACRD,EAAME,QAAQK,WAAWX,EAAMY,WAC9B,CAACZ,EAAMY,UAEVP,qBAAU,WACRD,EAAME,QAAQO,SAAWb,EAAMa,WAC9B,CAACb,EAAMa,WAEVR,qBAAU,WACRD,EAAME,QAAQQ,YAAYd,EAAMe,YAC/B,CAACf,EAAMe,WAEVV,qBAAU,WACRD,EAAME,QAAQU,eAAiBhB,EAAMgB,iBACpC,CAAChB,EAAMgB,iBAEVX,qBAAU,WACRD,EAAME,QAAQW,IAAIjB,EAAMkB,SACvB,CAAClB,EAAMkB,QAYNlB,EARFa,SAQEb,EAPFe,SAOEf,EANFgB,eAMEhB,EALFY,QAKEZ,EAJFO,MAIEP,EAHFkB,MAGElB,EAFFmB,kBAPF,IAQKC,EARL,YASIpB,EATJ,wFAYA,OACE,qCACE,oCACEqB,IAAKpB,EACLhI,UAAU,gBACNmJ,IAEN,sBAAMC,IAAKlB,EAAM7H,MAAO,CAAEgJ,QAAS,cAKzCvB,GAAMwB,aAAe,CACnBV,SAAU,IACVE,SAAU,EACVC,eAAgB,GAChBJ,QAAS,CAOPY,cAAe,CACb,CAAC,EAAK,WACN,CAAC,GAAK,WACN,CAAC,GAAK,WAIN,CAAC,EAAG,YAENC,MAAO,IACPC,UAAW,IACXC,YAAa,EACbC,QAAS,CACPnL,OAAQ,GACRoL,YAAa,KACb1I,MAAO,QAMT2I,YAAa,UACbC,kBAAkB,EAClBC,gBAAgB,GAElBzB,OAAO,EACPY,kBAAmB,cAGNpB,ICrHTkC,GAAS,SAACC,GACd,IAAIC,EAAU,EACZC,EAAU,EACRC,EAAOH,EASX,OARIG,EAAO,MAETA,GAAkB,KADlBF,EAAUlH,KAAKC,MAAMmH,EAAO,OAG1BA,EAAO,MAETA,GAAkB,KADlBD,EAAUnH,KAAKC,MAAMmH,EAAO,OAG1BF,EAAU,EACN,GAAN,OAAUA,EAAV,gBAAyBC,EAAU,KAAKE,UAAxC,KAEI,GAAN,OAAUF,EAAV,aAAsBC,EAAO,KAAKC,UAAlC,MAGIC,GAAS,SAACC,GACd,IAAMC,EAAS,IACXC,EAAK,EACPC,EAAK,EACHN,EAAOG,EASX,OARIH,EAAOI,MAETJ,IADAK,EAAKzH,KAAKC,MAAMmH,EAAI,MACPI,EAASA,GAEpBJ,EAAOI,IAETJ,IADAM,EAAK1H,KAAKC,MAAMmH,EAAOI,IACVA,GAEXC,EAAK,EACD,GAAN,OAAUA,EAAV,aAAiBC,EAAK,KAAKL,UAA3B,MAEI,GAAN,OAAUK,EAAV,aAAiBN,EAAO,KAAKC,UAA7B,OAKWM,GAAwC,SAAC,GAAmB,IAAjB/F,EAAgB,EAAhBA,KAAMjH,EAAU,EAAVA,IAC5D,IAAKiH,EAAKgG,OAAOC,QAAQxD,QACvB,OAAO,KAGT,IAAMyD,EAAa,CACjB,yBACElG,EAAKgG,OAAOC,QAAQxD,SACpBzC,EAAKgG,OAAOC,QAAQxD,QAAQ0D,OAC5Bf,GAAOpF,EAAKgG,OAAOC,QAAQxD,QAAQ0D,MAAM,GAAGC,sBAC9C,sBACEpG,EAAKgG,OAAOC,QAAQxD,SACpBzC,EAAKgG,OAAOC,QAAQxD,QAAQ0D,OAC5Bf,GAAOpF,EAAKgG,OAAOC,QAAQxD,QAAQ0D,MAAM,GAAGE,aAC9C,iBACErG,EAAKgG,OAAOM,YAAY7D,SACxBzC,EAAKgG,OAAOM,YAAY7D,QAAQ0D,OAChCnG,EAAKgG,OAAOM,YAAY7D,QAAQ0D,MAAM,GAAGI,YAC3C,eACEvG,EAAKgG,OAAOM,YAAY7D,SACxBzC,EAAKgG,OAAOM,YAAY7D,QAAQ0D,OAChCT,GAAO1F,EAAKgG,OAAOM,YAAY7D,QAAQ0D,MAAM,GAAGK,kBAWpD,OAFAxG,EAAKnF,WAAL,YAA+B4L,MC5EE,SAACjM,GAAsC,IAAD,QACjE+L,GACJ,UAAA/L,EAAOwL,OAAOM,YAAY7D,eAA1B,eAAmC0D,SAAnC,UACA3L,EAAOwL,OAAOM,YAAY7D,eAD1B,aACA,EAAmC0D,MAAM,GAAGI,aACxCC,GACJ,UAAAhM,EAAOwL,OAAOM,YAAY7D,eAA1B,eAAmC0D,SAAnC,UACA3L,EAAOwL,OAAOM,YAAY7D,eAD1B,aACA,EAAmC0D,MAAM,GAAGK,iBAGxCE,EAAgB,QAElBD,EAAQ,IAeZ,OAZIF,EANgB,KAOlBE,GAASrI,KAAKuI,IAAI,GAAuC,GAA7BJ,EAPV,MAUhBC,EAAkBE,IACpBD,GAASrI,KAAKuI,IACZ,IACEH,EAAkBE,GAAnB,QAAqD,KAIlDtI,KAAKwI,IAAI,EAAGH,EAAQ,KDmDWI,CAAoB7G,GAGzD,eAAC,GAAD,CACEzD,MAAM,aACNa,KAAK,2DACLrE,IAAKA,EAHP,UAKE,eAAC+N,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKC,GAAI,GAAT,SACE,cAAC,EAAD,CAAuBvL,MAAO,CAAE6F,aAAc,QAbxC,CAAC,gBAAiB,cAAe,MAAO,kBAezCpG,KAAI,SAACX,EAAKyI,GACf,IAAM/H,EAAW+E,EAAKnF,WAAWN,GAC3BkM,EAAQxL,EAASwL,MACvB,OACIQ,MAAMR,IACN,cAACM,GAAA,EAAD,CAEEC,GAAI,GACJE,GAAI,EACJC,GAAI,EACJ/L,UAAU,mBALZ,SAOE,eAACiG,EAAA,EAAD,WACE,cAAC,GAAD,CACE9C,MAAO,IACPnC,OAAQ,GACRiI,MAAe,IAARoC,EACPvC,SAAU,EACVF,SAAU,IACVG,eAAgB,KAElB,eAAC9C,EAAA,EAAKU,KAAN,WACE,cAACV,EAAA,EAAKE,MAAN,UAAatG,EAASsB,QACtB,cAAC8E,EAAA,EAAKE,MAAN,CACE9F,MAAO,CAAEY,SAAU,OAAQqF,WAAY,QADzC,UAGY,IAAR+E,GAAahB,UAAY,aApB5BxK,EAASsB,MAAQyG,IA0B1B,WAIN,cAAC8D,EAAA,EAAD,UACGvE,OAAOC,KAAK0D,GAAYhL,KAAI,SAACyB,GAC5B,OACE,cAACoK,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAGC,GAAI,EAAe/L,UAAU,mBAAjD,SACE,cAACiG,EAAA,EAAD,CAAMjG,UAAU,cAAhB,SACE,eAACiG,EAAA,EAAKU,KAAN,WACE,cAACV,EAAA,EAAKE,MAAN,CAAY9F,MAAO,CAAEY,SAAU,UAA/B,SACGM,IAEH,cAAC0E,EAAA,EAAKE,MAAN,CACE9F,MAAO,CAAEY,SAAU,SAAUqF,WAAY,QAD3C,SAIGwE,EAAWvJ,WAVYA,YEzHtCyK,GAAc,SAACrH,GACnB,IAAMsH,EAAYtH,EAAI3C,MAAQ2C,EAAI3C,KAAKiK,UAAa,WAC9CtL,EACS,aAAbsL,GAEiB,SAAbA,EADA,SAGe,WAAbA,EACE,UACa,QAAbA,EACE,OACA,UACZ,OACE,cAACtK,EAAA,EAAD,CAAO3B,UAAU,QAAQW,QAASA,EAAlC,SACGsL,KAKDC,GAAmB,gCAAgCC,MAAM,KAEzDC,GAAc,SAAC7M,EAAsBC,GAAvB,OAClB0M,GAAiBG,QAAQ9M,EAAEyC,KAAKiK,UAChCC,GAAiBG,QAAQ7M,EAAEwC,KAAKiK,WAMrBK,GAAgC,SAAC,GAAc,IACpD7H,EADmD,EAAXG,KAG9C,OADAH,EAAKnF,KAAK8M,IAEP3H,EAAKjG,QACJ,cAAC,GAAD,CACE2C,MAAM,SACNa,KAAK,kEAFP,SAIE,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIrH,MAAO,CAAE8C,MAAO,KAApB,sBACA,oCACA,sCACA,8CAGJ,gCACGsB,EAAK3E,KAAI,SAAC6H,EAA4BC,GACrC,OACE,+BACE,6BACE,cAAC,GAAD,eAAiBD,MAEnB,6BAAKA,EAAQ4E,aACb,6BAAK5E,EAAQ3F,KAAK9D,OAClB,6BAAKyJ,EAAQ6E,iBANN7E,EAAQ4E,WAAa3E,cAc1C,MCjEE6E,GAAkB,SAAClN,EAAuBC,GAE9C,IAAMmD,EAAQ+J,SAASlN,EAAEmN,UAAYD,SAASnN,EAAEoN,UAChD,OAAc,IAAVhK,EAEK+J,SAASlN,EAAEoN,YAAcF,SAASnN,EAAEqN,YAEtCjK,GAGHkK,GAAa,SAAClI,GAClB,IAAMsH,EAAWtH,EAAIgI,SACfhM,EACS,MAAbsL,EACI,OACa,MAAbA,EACE,UACa,MAAbA,GAEe,MAAbA,EADA,SAGE,OACZ,OACE,cAACtK,EAAA,EAAD,CAAO3B,UAAU,QAAQW,QAASA,EAAlC,SACGgE,EAAImI,YAOEC,GAA8B,SAAC,GAAmB,IAAjBnI,EAAgB,EAAhBA,KAAMjH,EAAU,EAAVA,IAC5CqP,EACJpI,GAAQA,EAAKqI,MAAQrI,EAAKqI,KAAKC,SAAQ,SAACD,GAAD,OAAUA,EAAKD,WAAW,GAEnE,OADAA,EAAO1N,KAAKmN,IAETO,EAAOxO,QACN,cAAC,GAAD,CACE2C,MAAM,QACNxD,IAAKA,EACLqE,KAAK,6CAHP,SAKE,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIrH,MAAO,CAAE8C,MAAO,KAAOnD,UAAU,cAArC,6BAGA,2CAGJ,gCACGgN,EAAOlN,KAAI,SAACqN,EAAOvF,GAClB,OACE,+BACE,oBAAI5H,UAAU,cAAd,SACE,cAAC,GAAD,eAAgBmN,MAElB,6BAAKA,EAAMjP,SAJJiP,EAAMjP,KAAO0J,cAYlC,MCtDEwF,GAAa,CAAC,OAAQ,KAAM,MAAO,SAAU,OAAQ,YAK9CC,GAA8B,SAAC,GAAmB,IAd5ClO,EAc2ByF,EAAgB,EAAhBA,KAAMjH,EAAU,EAAVA,IAC5C2P,EAAa1I,EAAK2I,MAAK,SAACC,GAAD,MAAwB,kBAAbA,EAAMjK,MACxC5E,EACJiG,GAAQ0I,GAAcA,EAAWG,QACnB7I,EAAK9E,KAAI,SAAC0N,GAAD,mBAAC,eACrBA,GADoB,IAEvBE,gBAVsBzB,EAUWuB,EAAMvB,SAVImB,GAAWf,QAAQJ,MAAzC,IAACA,KAYhB3M,MAtBSH,EAsBM,iBAtBU,SAACI,EAAQC,GAC1C,OAAID,EAAEJ,GAAOK,EAAEL,GACN,EACEI,EAAEJ,GAAOK,EAAEL,IACZ,EAEH,KAgBmCwO,UAC1C,IAAMC,EAAahJ,EAAKjF,QAAO,SAAC6N,GAAD,OAAqD,IAA1CA,EAAMjK,GAAG8I,QAAQ,wBAA4BsB,UACvF,OAAOhP,GACL,cAAC,GAAD,CAAOwC,MAAM,MAAMa,KAAK,4CAAyCrE,IAAKA,EAAtE,SACE,cAAC+N,EAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,iDACiB,cAAC,EAAD,CAAOnK,OAAK,EAAC7C,MAAOA,OAErC,uBACCiP,EAAW9N,KAAI,SAAC+N,EAAajG,GAC5B,OAAO,eAACkG,EAAA,EAAD,CAA2BnN,QAAQ,OAAnC,UAA0C,cAAC,IAAD,CAAMN,MAAO,CAAEE,YAAa,KAAQsN,EAAOJ,UAAzEI,EAAOtK,GAAKqE,cAKpC,M,oBCnCDmG,GAA4C,SAAC,GAAD,IAAG/G,EAAH,EAAGA,QAAH,OAC/CA,GAAWA,EAAQxI,QAClB,eAAC+I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACrH,MAAO,CAAE6F,aAAc,IAArD,UACE,kCACE,6BACE,oBAAIlG,UAAU,qBAAqBgO,QAAS,EAA5C,uBAIF,+BACE,sCACA,wCACA,oBAAIhO,UAAU,cAAd,sBACA,oBAAIA,UAAU,cAAd,0BAGJ,gCACGgH,EAAQlH,KAAI,SAACmO,EAAQrG,GAAT,OACX,+BACE,6BAAKqG,EAAO/P,OACZ,6BAAK+P,EAAOC,SACZ,oBAAIlO,UAAU,cAAd,SAA6BiO,EAAOE,SAAW,eAAO,WACtD,oBAAInO,UAAU,cAAd,SAA6BiO,EAAOG,OAAS,eAAO,aAJ7CH,EAAO/P,KAAO,GAAK0J,YAUpC,MAQIyG,GAA8C,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjDA,GAAYA,EAAS9P,QACpB,eAAC+I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,kCACE,6BACE,oBAAI1H,UAAU,qBAAqBgO,QAAS,EAA5C,wCAIF,+BACE,sCACA,qCACA,sDAGJ,gCACGM,EAASxO,KAAI,SAACyO,EAAS3G,GACtB,OACE,+BACE,6BAAK2G,EAAQC,OACb,8BA1BQ7Q,EA0BU4Q,EAAQ5Q,IAzBtC,mBAAG6I,KAAM7I,EAAT,SAAeD,EAASC,GAAKI,UAAU,EAAG,IAAM,WA0BpC,6BAAKwQ,EAAQlH,SAAWkH,EAAQlH,QAAQoH,YAHjCF,EAAQ5Q,IAAMiK,GAxBd,IAACjK,WAkCpB,MAII+Q,GAAgD,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACnDA,GAAaA,EAAUnQ,QACtB,eAAC+I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACrH,MAAO,CAAE6F,aAAc,IAArD,UACE,gCACE,+BACE,oBAAI7F,MAAO,CAAE8C,MAAO,KAApB,kBACA,0CACA,oCACA,sCACA,8CAGJ,gCACGwL,EAAU7O,KAAI,SAAC8O,EAAUhH,GACxB,IAAMiH,EACHD,EAASE,OACRF,EAASE,MAAMC,SACfC,KAAMJ,EAASE,MAAMC,QAAQE,WAC/B,KACF,OACE,+BACE,oBAAIjP,UAAU,cAAd,SACG6O,GAAQD,EAASE,OAASF,EAASE,MAAMC,SACxC,cAACF,EAAD,CACExO,MAAO,CAAE8C,MAAO,IAChBhC,MAAOyN,EAASE,MAAMC,QAAQG,MAAMC,OAI1C,6BAAKP,EAASQ,WACd,6BAAKR,EAASS,KACd,6BACIT,EAASE,OACTF,EAASE,MAAMQ,MACfV,EAASE,MAAMQ,KAAKJ,MAAMC,IAC1B,MAGJ,6BACIP,EAASE,OACTF,EAASE,MAAMC,SACfH,EAASE,MAAMC,QAAQG,MAAMC,IAC7B,QAtBGP,EAASQ,SAAW,IAAMR,EAASS,aA8BtD,MAEWE,GAAoC,SAAC,GAAc,IAAZ3K,EAAW,EAAXA,KAC5C4K,EAAY,GAOlB,OANI5K,EAAKoC,SAAWpC,EAAKoC,QAAQxI,QAC/BgR,EAAUC,KAAV,MAAAD,EAAS,aAAS5K,EAAKoC,UAErBpC,EAAK0J,UAAY1J,EAAK0J,SAAS9P,QACjCgR,EAAUC,KAAV,MAAAD,EAAS,aAAS5K,EAAK0J,WAGtBkB,EAAUhR,QACT,eAAC,GAAD,CACE2C,MAAM,gBACNa,KAAK,8CAFP,UAIE,cAAC,GAAD,CAAcgF,QAASpC,EAAKoC,UAC5B,cAAC,GAAD,CAAesH,SAAU1J,EAAK0J,WAC9B,cAAC,GAAD,CAAgBK,UAAW/J,EAAK+J,gBAGlC,cAAC,GAAD,CACExN,MAAM,gBACNa,KAAK,8CAFP,SAIE,cAAC8L,EAAA,EAAD,CAAOnN,QAAQ,UAAf,oDClJK+O,GAAwC,SAAC,GAAc,IAAZ9K,EAAW,EAAXA,KACpD,OACKA,GACG,cAAC,GAAD,CACIzD,MAAM,aACNa,KAAK,gCAFT,SAII,eAACuF,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,oBAAIrH,MAAO,CAAE8C,MAAO,KAApB,kBAGA,4CACA,8CAGR,gCACKyB,EAAK+K,cAAgB/K,EAAK+K,aAAa7P,KAAI,SAAC8P,EAAahI,GACtD,OACI,+BACI,6BACKgI,EAAO1R,OAEZ,6BAAK0R,EAAOnQ,YAAcmQ,EAAOnQ,WAAWK,KAAI,SAAC+P,GAAD,OAAcA,EAAI3R,QAAM4R,KAAK,QAC7E,6BAAI,mBAAGtJ,KAAMoJ,EAAOG,QAAStJ,OAAO,SAASC,IAAI,sBAA7C,SAAoEkJ,EAAOG,cAL1EH,EAAO1R,KAAO0J,cAa/C,M,UC9BKoI,GAAoC,SAAC,GAAmB,IAAD,EAAhBpL,EAAgB,EAAhBA,KAAMjH,EAAU,EAAVA,IAClDsS,EAAerL,GAAI,4BAAyBA,EAAKsL,QAAY,KAEnE,OACGD,GAAevS,EAASkH,EAAKjH,OAASD,EAASC,IAC9C,cAAC,GAAD,CACEwD,MAAM,sBACNa,KAAK,2CACLrE,IAAKsS,EAHP,SAKE,eAACvE,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAG9L,UAAU,mBAA9B,SACE,eAACiG,EAAA,EAAD,WACE,cAAC,GAAD,CACE9C,MAAO,IACPnC,OAAQ,GACRiI,MAAqB,IAAdrE,EAAKI,OACZ8D,SAAU,EACVF,SAAU,IACVG,eAAgB,KAElB,eAAC9C,EAAA,EAAKU,KAAN,WACE,cAACV,EAAA,EAAKE,MAAN,4DAGA,cAACF,EAAA,EAAKE,MAAN,CAAY9F,MAAO,CAAEY,SAAU,OAAQqF,WAAY,QAAnD,SACG1B,EAAKI,OAAS,cAMtBJ,EAAKiG,SACJ,cAACc,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAG9L,UAAU,mBAA9B,SACE,eAACiG,EAAA,EAAD,WACE,cAAC,GAAD,CACE9C,MAAO,IACPnC,OAAQ,GACRiI,MAAOjG,KAAKwI,IAAI,EAAG5G,EAAKiG,QAAQsF,QAAQC,OACxCtH,SAAU,EACVF,SAAU,IACVG,eAAgB,GAChBJ,QAAS,CACPY,cAAe,CACb,CAAC,EAAG,WACJ,CAAC,GAAK,WACN,CAAC,GAAK,WACN,CAAC,GAAK,eAIZ,eAACtD,EAAA,EAAKU,KAAN,WACE,cAACV,EAAA,EAAKE,MAAN,kCACA,cAACF,EAAA,EAAKE,MAAN,CAAY9F,MAAO,CAAEY,SAAU,OAAQqF,WAAY,QAAnD,SACG1B,EAAKiG,QAAQsF,QAAQC,MAAQ,eAOxC,eAACzE,GAAA,EAAD,CAAKC,GAAI,GAAIE,GAAI,EAAG9L,UAAU,mBAA9B,eAC4B6B,KAArB,OAAJ+C,QAAI,IAAJA,GAAA,UAAAA,EAAMiG,eAAN,eAAe3F,QACd,cAACe,EAAA,EAAD,CAAM5F,MAAO,CAAE6F,aAAc,IAA7B,SACE,eAACD,EAAA,EAAKU,KAAN,CAAWtG,MAAO,CAAEgG,QAAS,GAA7B,UACE,cAACJ,EAAA,EAAKE,MAAN,oBACA,8BACE,cAAC,EAAD,CACExH,MAAOiG,EAAKO,WACZ5D,MAAOqD,EAAKiG,QAAQ3F,eAO7BN,EAAKyL,KACJ,cAACpK,EAAA,EAAD,UACE,eAACA,EAAA,EAAKU,KAAN,CAAWtG,MAAO,CAAEgG,QAAS,GAA7B,UACE,eAACJ,EAAA,EAAKE,MAAN,4BACiB,IACdvB,EAAKyL,IAAIC,MACR,cAAC,EAAD,CAAO9O,OAAK,EAAC7C,MAAM,KAAK4C,MAAM,WAE9B,cAAC,EAAD,CAAOC,OAAK,EAAC7C,MAAM,IAAI4C,MAAM,gBAGjC,sBAAKlB,MAAO,CAAEY,SAAU,SAAUqF,WAAY,QAA9C,sBACY,IACTiK,aAAO,IAAIC,KAAK5L,EAAKyL,IAAII,YAAa,aAAc,CACnDC,OAAQC,uBAUxB,cAAC,GAAD,CACExP,MAAM,sBACNa,KAAK,2CAFP,SAIE,cAAC8L,EAAA,EAAD,CAAOnN,QAAQ,UAAf,uDC5GF8L,GAAkB,SAAClN,EAAmBC,GAE1C,IAAM4N,EAAa,IAAIwD,IAKvB,OAJAxD,EAAWpE,IAAI,WAAY,GAC3BoE,EAAWpE,IAAI,OAAQ,GACvBoE,EAAWpE,IAAI,WAAY,GAC3BoE,EAAWpE,IAAI,MAAO,GAEpBoE,EAAWyD,IAAIrR,EAAEsR,sBAAsB7E,UACvCmB,EAAWyD,IAAItR,EAAEuR,sBAAsB7E,WAIrC8E,GAAkB,SAACC,GACvB,IAAM/E,EAAW+E,EAAKF,sBAAsB7E,SACtCtL,EACS,QAAbsL,EACI,OACa,aAAbA,EACA,UACa,SAAbA,GAEa,aAAbA,EADA,SAGA,OACN,OACE,cAACtK,EAAA,EAAD,CAAO3B,UAAU,QAAQW,QAASA,EAAlC,SACGsL,KAOMgF,GAAwC,SAAC,GAAmB,IAAjBrM,EAAgB,EAAhBA,KAChDsM,GADgE,EAAVvT,IAE1DiH,GAAQA,EAAKuM,oBAAoBC,WAAa,EAC1CxM,EAAKuM,oBAAoBD,MACzB,IAEN,OADAtM,EAAKuM,oBAAoBD,MAAM5R,KAAKmN,IAEjC7H,EAAKuM,oBAAoBC,WAAa,GACrC,eAAC,GAAD,CACEjQ,MAAM,aACNxD,IAAKiH,EAAKjH,IAAM,uBAChBqE,KACE,sFACyC,IACvC,mBACE3B,MAAO,CAAEa,MAAO,SAChBsF,KAAM5B,EAAKjH,IACX8I,OAAO,SACPC,IAAI,sBAJN,SAMG9B,EAAKjH,SAZd,UAiBA,iDACiB,cAAC,EAAD,CAAO6D,OAAK,EAAC7C,MAAOiG,EAAKjG,WAE1C,uBACE,eAAC4I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIrH,MAAO,CAAE8C,MAAO,KAAOnD,UAAU,cAArC,+BAGA,6DACA,2DAGJ,gCACGkR,EAAMpR,KAAI,SAACkR,EAAMpJ,GAChB,OACE,+BACE,oBAAI5H,UAAU,cAAd,SACE,cAAC,GAAD,eAAqBgR,MAEvB,6BAAKA,EAAKF,sBAAsBO,QAAQnT,OACxC,6BACG8S,EAAKF,sBAAsBQ,SAASC,WAAWzR,KAC9C,SAAC0R,EAAW5J,GACV,OACE,8BACE,mBAAGnB,OAAO,SAASD,KAAMgL,EAAU7T,IAAK+I,IAAI,sBAA5C,SACG5I,EAAkB0T,EAAU7T,OAE/B,yBAJMG,EAAkB0T,EAAU7T,KAAOiK,UAT5CoJ,EAAKF,sBAAsBO,QAAQnT,KAAO0J,eA0B/D,MCvGE6E,GAAkB,SAAClN,EAAkBC,GAEzC,IAAM4N,EAAa,IAAIwD,IAGvB,OAFAxD,EAAWpE,IAAI,QAAS,GACxBoE,EAAWpE,IAAI,UAAW,GAExBoE,EAAWyD,IAAIrR,EAAEiS,KAAKxF,UACtBmB,EAAWyD,IAAItR,EAAEkS,KAAKxF,WAIpByF,GAAgB,SAACvE,GACrB,IAAMlB,EAAWkB,EAAMsE,KAAKxF,SACtBtL,EACS,YAAbsL,EACI,UACa,UAAbA,EACE,SACA,OACR,OACE,cAACtK,EAAA,EAAD,CAAO3B,UAAU,QAAQW,QAASA,EAAlC,SACGsL,KAOM0F,GAAoC,SAAC,GAAmB,IAAjB/M,EAAgB,EAAhBA,KAC5CoI,GAD4D,EAAVrP,IAEtDiH,GAAQA,EAAKoI,OAAOxO,OAAS,EACzBoG,EAAKoI,OACL,IAEN,OADAA,EAAO1N,KAAKmN,IAETO,EAAOxO,OAAS,GACf,eAAC,GAAD,CACE2C,MAAM,WACNxD,IAAKiH,EAAKjH,IAAM,0BAChBqE,KACE,sEAC+B,IAC7B,mBACE3B,MAAO,CAAEa,MAAO,SAChBsF,KAAM5B,EAAKjH,IACX8I,OAAO,SACPC,IAAI,sBAJN,SAMG9B,EAAKjH,SAZd,UAiBE,iDACiB,cAAC,EAAD,CAAO6D,OAAK,EAAC7C,MAAOiG,EAAKjG,WAE1C,uBACA,eAAC4I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIrH,MAAO,CAAE8C,MAAO,KAAOnD,UAAU,cAArC,+BAGA,0CACA,kDAGJ,gCACGgN,EAAOlN,KAAI,SAACqN,EAAOvF,GAClB,OACE,+BACE,oBAAI5H,UAAU,cAAd,SACE,cAAC,GAAD,eAAmBmN,MAErB,6BAAKA,EAAMsE,KAAKvT,OAChB,6BACE,mBAAGuI,OAAO,SAASD,KAAM2G,EAAMyE,SAAUlL,IAAI,sBAA7C,SACGyG,EAAMsE,KAAKI,kBAPT1E,EAAMsE,KAAKvT,KAAO0J,eAiBvC,MCvFEkK,GAAU,SAAC1B,EAAe2B,GAC9B,OAAO3B,EAAQ4B,OAAOC,WAAWF,EAAcG,OAG3CC,GAAc,SAAC5S,EAAiBC,GACpC,OACEA,EAAE4S,QAAQC,gBAAgBC,OAAOR,GAAS,GAC1CvS,EAAE6S,QAAQC,gBAAgBC,OAAOR,GAAS,IAIxCS,GAAa,SAACC,GAClB,OACEA,EAAUJ,QAAQC,gBAAgB1S,QAChC,SAACoS,GAAD,OAAmBA,EAAcU,cACjCjU,OAAS,GAITkU,GAAY,SAACF,GACjB,IAAMhH,EAAMgH,EAAUJ,QAAQC,gBAAgBC,OAAOR,GAAS,GACxDnR,GACH4R,GAAWC,IAAchH,EAAM,EAAIgH,EAAUJ,QAAQC,gBAAgB7T,OAClE,UACA+T,GAAWC,IACXhH,EAAM,EAAIgH,EAAUJ,QAAQC,gBAAgB7T,OAC5C,SACA,OACN,OACE,cAACmD,EAAA,EAAD,CAAO3B,UAAU,QAAQW,QAASA,EAAlC,SACGA,KAOMgS,GAA4B,SAAC,GAAmB,IAAjB/N,EAAgB,EAAhBA,KAAMjH,EAAU,EAAVA,IAC1CiV,EAAahO,GAAQA,EAAKgO,WAAWpU,OAAS,EAAIoG,EAAKgO,WAAa,GAE1E,OADAhO,EAAKgO,WAAWtT,KAAK6S,IAElBvN,EAAKgO,WAAWpU,OAAS,GACxB,eAAC,GAAD,CACE2C,MAAM,OACNxD,IAAKA,EACLqE,KACE,qEAC8B,IAC5B,mBACE3B,MAAO,CAAEa,MAAO,SAChBsF,KAAM,WAAa5B,EAAKiO,KACxBpM,OAAO,SACPC,IAAI,sBAJN,SAMG,WAAa9B,EAAKiO,UAZ3B,UAiBA,iDACiB,cAAC,EAAD,CAAOrR,OAAK,EAAC7C,MAAOiG,EAAKjG,WAE1C,uBACE,eAAC4I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIrH,MAAO,CAAE8C,MAAO,KAAOnD,UAAU,cAArC,+BAGA,0DACA,2DAGJ,gCACG4S,EAAW9S,KAAI,SAAC0S,EAAW5K,GAC1B,OACE,+BACE,oBAAI5H,UAAU,cAAd,SACE,cAAC,GAAD,eAAewS,MAEjB,6BACGA,EAAUJ,QAAQlU,KACjB,UACAsU,EAAUJ,QAAQ7O,GAClB,MAEJ,6BACGiP,EAAUJ,QAAQC,gBAAgBvS,KACjC,SAACiS,EAAenK,GACd,OACE,8BACE,mBACEnB,OAAO,SACPD,KACE,2BAA6BuL,EAAcxO,GAE7CmD,IAAI,sBALN,SAOGqL,EAAcxO,KAEjB,yBAVMwO,EAAcxO,GAAKqE,UAd5B4K,EAAUJ,QAAQlU,KAAO0J,eAqC9C,MClGEkL,GAAS,SAAC,GAAD,IAAGvP,EAAH,EAAGA,GAAH,OACb,qBAAKA,GAAIA,EAAIlD,MAAO,CAAE6F,aAAc,OAGzB6M,GAAgC,SAAC,GAA+B,IAA7BpV,EAA4B,EAA5BA,IAAKyB,EAAuB,EAAvBA,OAC7C4T,GADoE,gCACvD5T,GAAUA,EAAO6T,KAAO7T,EAAO6T,IAAIC,WAWtD,OAVAC,aAAgB,WACd,IAAMlP,EAAOmP,SAASC,SAASpP,KAAKkI,MAAM,KAC1C,GAAoB,IAAhBlI,EAAKzF,OAAc,CAErB,IAAMiI,EAAS2M,SAASE,eAAerP,EAAK,IACxCwC,GACFA,EAAO8M,oBAGV,CAACnU,IACCA,EAIH,gCACE,eAACoU,EAAA,EAAD,CACEnT,MAAO,CACLW,OAAQ,IACRV,UAAW,GACXmT,WAAY,GACZvN,aAAc,GACdmD,QAAS,QANb,UASE,sBAAKhJ,MAAO,CAAEqT,KAAM,YAApB,UACE,6BACE,mBAAGlN,KAAM7I,EAAK+I,IAAI,sBAAsBD,OAAO,SAA/C,SACG9I,MAGL,8BACGyB,EAAOS,UACN,cAAC,IAAD,CAAMI,GAAE,oBAAeb,EAAOS,UAA9B,SACE,cAAC8B,EAAA,EAAD,CAAOtB,MAAO,CAAEE,YAAa,GAAKI,QAAQ,UAA1C,SACGvB,EAAOS,aAIbT,EAAOuU,MACNvU,EAAOuU,KAAK7T,KAAI,SAAC8T,GAAD,OACd,cAAC,IAAD,CAAgB3T,GAAE,eAAU2T,GAA5B,SACE,cAACjS,EAAA,EAAD,CAAOtB,MAAO,CAAEE,YAAa,GAAKI,QAAQ,OAA1C,SACGiT,KAFMA,MAMdZ,GACC,uBAAM7R,MAAO6R,EAAb,UACE,cAAC,IAAD,CAAO5S,KAAM,GAAIC,MAAO,CAAEE,YAAa,KADzC,0BAEuB,IACpBsT,YAAoB,IAAIrD,KAAKwC,GAAa,CACzCtC,OAAQC,eAMlB,qBAAKtQ,MAAO,CAAEqT,KAAM,YAAapT,WAAY,IAA7C,SACGlB,EAAO0U,YACN,mBAAGtN,KAAM7I,EAAK+I,IAAI,sBAAsBD,OAAO,SAA/C,SACE,qBACEsN,IAAG,8BAAsBpW,GACzB0C,MAAO,CACL2T,SAAU,WACVC,IAAK,EACLC,UAAW,GACXC,OAAQ,yBAEVC,IAAG,UAAKC,kBAAL,mBAAsCC,OAAOC,KAC9C5W,GADC,6BAQXM,EAAc,eAAiBmB,EAAO6T,KACtC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQ1P,GAAG,eACX,cAAC,GAAD,CACEqB,KAAMxF,EAAO6T,IACbtV,IAAG,UAAK0W,kBAAL,mBAAsCC,OAAOC,KAC9C5W,GADC,eAIL,2BAGF,KACAM,EAAc,eACdmB,EAAOoV,YACPpV,EAAOoV,WAAWC,cAChB,eAAC,WAAD,WACE,cAAC,GAAD,CAAQlR,GAAG,eACVnE,EAAOoV,WAAWC,aAChB9U,OAAO+U,SACP5U,KAAI,SAAC6U,GACJ,OACE,cAAC,GAAD,CAEE/P,KAAM+P,EACNhX,IAAKA,GAFAgX,EAAWhX,QAMxB,2BAGJ,KACAM,EAAc,aACdmB,EAAOwV,UACPxV,EAAOwV,SAASH,cACd,eAAC,WAAD,WACE,cAAC,GAAD,CAAQlR,GAAG,aACVnE,EAAOwV,SAASH,aAAa9U,OAAO+U,SAAS5U,KAAI,SAAC6U,GACjD,OACE,cAAC,GAAD,CAA+B/P,KAAM+P,EAAYhX,IAAKA,GAAvCgX,EAAWhX,QAG9B,2BAGJ,KACAM,EAAc,aAAemB,EAAOyV,UACpC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQtR,GAAG,aACX,cAAC,GAAD,CAAUqB,KAAMxF,EAAOyV,SAAUlX,IAAKA,IACtC,2BAGF,KACAM,EAAc,YAAcmB,EAAO0V,SACnC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQvR,GAAG,YACX,cAAC,GAAD,CACEqB,KAAMxF,EAAO0V,QACbnX,IAAG,UAAK0W,kBAAL,mBAAsCC,OAAOC,KAC9C5W,GADC,mBAIL,2BAGF,KACAM,EAAc,SAAWmB,EAAO2V,MAChC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQxR,GAAG,SACX,cAAC,GAAD,CACEqB,KAAMxF,EAAO2V,KACbpX,IAAG,UAAK0W,kBAAL,mBAAsCC,OAAOC,KAC9C5W,GADC,oBAIL,2BAGF,KACAM,EAAc,SAAWmB,EAAO4V,MAChC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQzR,GAAG,SACX,cAAC,GAAD,CAAMqB,KAAMxF,EAAO4V,OACnB,2BAGF,KACA/W,EAAc,iBAAmBmB,EAAO6V,cACxC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQ1R,GAAG,iBACX,cAAC,GAAD,CAAUqB,KAAMxF,EAAO6V,eACvB,2BAGF,KACAhX,EAAc,QAAUmB,EAAO8V,KAC/B,eAAC,WAAD,WACE,cAAC,GAAD,CAAQ3R,GAAG,QACX,cAAC,GAAD,CACEqB,KAAMxF,EAAO8V,IACbvX,IAAG,UAAK0W,kBAAL,mBAAsCC,OAAOC,KAC9C5W,GADC,eAIL,2BAGF,KACAM,EAAc,WAAamB,EAAO+V,QAClC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQ5R,GAAG,WACX,cAAC,GAAD,CAAQqB,KAAMxF,EAAO+V,SACrB,2BAGF,KACAlX,EAAc,eAAiBmB,EAAOgW,YACtC,eAAC,WAAD,WACE,cAAC,GAAD,CAAQ7R,GAAG,eACX,cAAC,GAAD,CAAYqB,KAAMxF,EAAOgW,aACzB,2BAGF,QA9LG,yDAA4BzX,M,UC5BjCQ,GAAkCC,EAAQ,KAEnCiX,GAAkB,WAC7B,OACE,gCACE,uBACA,eAAC7B,EAAA,EAAD,CAAWnT,MAAO,CAAEgG,QAAS,OAA7B,UACE,6BAAKlI,GAAegD,OAAS,aAC7B,uBAFF,wHAKE,uBACA,uBANF,wIASE,uBACA,uBAVF,+FAY0B,IACxB,mBACEqF,KAAK,oDACLC,OAAO,SACPC,IAAI,sBAHN,0BAbF,IAqBE,uBAAM,uBACN,uBACA,cAAC,IAAD,CAAMzG,GAAG,aAAT,SACE,cAACqV,GAAA,EAAD,CAAQ3U,QAAQ,OAAhB,gDAIH1C,EAAc,eAAiB,eAAC,GAAD,CAAOkD,MAAM,oBAAb,sDAE9B,uBACA,uBACA,4DACA,4EACA,gFACA,sDACA,uBACA,eAAC2M,EAAA,EAAD,CAAOnN,QAAQ,OAAf,UACE,cAAC,IAAD,CAAMP,KAAM,GAAIC,MAAO,CAAEE,YAAa,KADxC,2FAKA,eAACuN,EAAA,EAAD,CAAOnN,QAAQ,UAAf,UACE,cAAC,IAAD,CAAeP,KAAM,GAAIC,MAAO,CAAEE,YAAa,KADjD,8FAIE,uBACA,cAAC,IAAD,CAAeH,KAAM,GAAIC,MAAO,CAAEE,YAAa,KALjD,yDAMyC,IACvC,mBACEiG,KAAK,iEACLE,IAAI,sBACJD,OAAO,SAHT,qBAPF,OAgBA,cAAC6O,GAAA,EAAD,CACE3U,QAAQ,OACR6F,KAAK,qDAFP,8BAQDvI,EAAc,eAAiB,eAAC,GAAD,CAAOkD,MAAM,aAAb,iFAE9B,uBACA,uBACA,uHACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,0BAA5B,2BAGA,cAAC8O,GAAA,EAAD,CACEjV,MAAO,CAAEoC,WAAY,GACrB9B,QAAQ,OACR6F,KAAK,0GAHP,+BASDvI,EAAc,aAAe,eAAC,GAAD,CAAOkD,MAAM,WAAb,wEAE5B,uBACA,uBACA,8GACA,qGACA,2HACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,6EAA5B,8BAKDvI,EAAc,SAAW,eAAC,GAAD,CAAOkD,MAAM,OAAb,8FAExB,uBACA,uBACA,6GACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,mBAC1BnG,MAAO,CAAEoC,WAAY,GADvB,kBAIA,cAAC6S,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,+CAA5B,4BAKDvI,EAAc,QAAU,eAAC,GAAD,CAAOkD,MAAM,yBAAb,oHAGvB,uBACA,uBACA,sDACA,uDACA,uBACA,eAAC2M,EAAA,EAAD,CAAOnN,QAAQ,OAAf,UACE,cAAC,IAAD,CAAMP,KAAM,GAAIC,MAAO,CAAEE,YAAa,KADxC,2FAKA,cAAC+U,GAAA,EAAD,CACE3U,QAAQ,OACR6F,KAAK,qDAFP,8BAQDvI,EAAc,YAAc,eAAC,GAAD,CAAOkD,MAAM,aAAb,iEAE3B,uBACA,uBACA,mEACA,wDACA,8DACA,wEACA,uBACA,eAAC2M,EAAA,EAAD,CAAOnN,QAAQ,OAAf,UACE,cAAC,IAAD,CAAMP,KAAM,GAAIC,MAAO,CAAEE,YAAa,KADxC,2FAKA,uBACA,cAAC+U,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,sBAA5B,2BAf2B,OAmB3B,cAAC8O,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,yCAA5B,4BAKDvI,EAAc,SAAW,eAAC,GAAD,CAAOkD,MAAM,2BAAb,8FAExB,uBACA,uBACA,mEACA,sDACA,wEACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,mCAA5B,2BAGA,cAAC8O,GAAA,EAAD,CACEjV,MAAO,CAAEoC,WAAY,GACrB9B,QAAQ,OACR6F,KAAK,kFAHP,gCASDvI,EAAc,aAAe,eAAC,GAAD,CAAOkD,MAAM,YAAb,6DAE5B,uBACA,uBACA,iGACA,iEACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,qBAA5B,2BAGA,cAAC8O,GAAA,EAAD,CACEjV,MAAO,CAAEoC,WAAY,GACrB9B,QAAQ,OACR6F,KAAK,2EAHP,sBASDvI,EAAc,WAAa,eAAC,GAAD,CAAOkD,MAAM,YAAb,iGAG1B,uBACA,uBACA,gDACA,sDACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,sCAA5B,8BAKDvI,EAAc,iBAAmB,eAAC,GAAD,CAAOkD,MAAM,gBAAb,wGAGhC,uBACA,uBACA,kDACA,gDACA,+CACA,uBACA,eAAC2M,EAAA,EAAD,CAAOnN,QAAQ,UAAf,UACE,cAAC,IAAD,CAAeP,KAAM,GAAIC,MAAO,CAAEE,YAAa,KADjD,6HAKA,cAAC+U,GAAA,EAAD,CACE3U,QAAQ,OACR6F,KAAK,6CAFP,4BAQDvI,EAAc,iBAAmB,eAAC,GAAD,CAAOkD,MAAM,SAAb,yFAEhC,uBACA,uBACA,+CACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,wCAA5B,8BAKDvI,EAAc,eAAiB,eAAC,GAAD,CAAOkD,MAAM,aAAb,uFAE9B,uBACA,uBACA,iDACA,8CACA,sCACA,uBACA,cAACmU,GAAA,EAAD,CAAQ3U,QAAQ,OAAO6F,KAAK,8BAA5B,kCCxQD,SAAS+O,KACZ,IAAQxR,EAAayR,cAAbzR,SAMR,OAJAqE,qBAAU,WACNkM,OAAOmB,SAAS,EAAG,KACpB,CAAC1R,IAEG,KCJJ,IAAM2R,GAAkB,WAC3B,OACI,gCACI,uBACA,cAAClC,EAAA,EAAD,CAAWnT,MAAO,CAAEgG,QAAS,MAAOnE,UAAW,UAA/C,SACI,+CAEJ,sBAAK7B,MAAO,CAAEsV,OAAQ,SAAUrT,SAAU,OAA1C,UACI,uBADJ,gBAEmB,sDAFnB,4HAE0K,mBAAGkE,KAAK,yCAAyCC,OAAO,SAASC,IAAI,sBAArE,sCAF1K,IAIG,uBAJH,IAIW,uBAJX,oHAOK,uBAPL,IAOa,uBAPb,8BAS0B,mBAAGF,KAAK,kCAAkCC,OAAO,SAASC,IAAI,sBAA9D,iDAT1B,mHAUM,uBAVN,IAUc,uBAVd,kFAWgF,mBAAGF,KAAK,6DAA6DC,OAAO,SAASC,IAAI,sBAAzF,4CAXhF,W,8ECONkP,GAAwC,SAAC,GAAc,IAAZhR,EAAW,EAAXA,KAC/C,OACI,eAACiR,GAAA,EAAD,CACE1S,MAAO,IACPnC,OAAQ,IACR4D,KAAMA,EACN+Q,OAAQ,CACN1B,IAAK,EACL6B,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOtT,QAAQ,SACf,cAACuT,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAK1T,QAAQ,QAAQ2T,KAAK,gBAK5BC,GAAc,SAAC5W,GAAD,OAClBA,EAASkL,MAAMjL,KAAI,SAAC4W,GAAD,MAAW,CAC5BxY,KAAMwY,EAAKxY,KACXyY,MAAOD,EAAKE,KAAKpY,YAoERqY,GAAsB,SAAC,GAA0C,IACtEpX,EAvDmB,SAACL,GAC1B,IAAM0X,EAAkB1X,EACrB8N,SAAQ,SAACvP,GAAD,MAAU,CAAEA,MAAKyX,WAAYzX,EAAIyX,eACzCzV,QAAO,qBAAGhC,MAAH,EAAQyX,cACflI,SACC,gBAAGvP,EAAH,EAAGA,IAAKyX,EAAR,EAAQA,WAAR,OACGA,GACCA,EAAWzF,aAAa7P,KAAI,SAACuH,GAAD,mBAAC,eACxBA,GADuB,IAE1B1J,IAAKA,EAAIA,UAEb,MAEAoZ,EAAkBrX,IACtBoX,EAAgB5J,SACd,SAAC8J,GAAD,OAAOA,EAAEvX,YAAcuX,EAAEvX,WAAWK,KAAI,SAACmX,GAAD,OAAOA,EAAE/Y,YAI/CgZ,EAAa,SAAChZ,GAAD,uBACjB4Y,EAAgBvJ,MAAK,SAACyJ,GAAD,OAAOA,EAAE9Y,OAASA,YADtB,aACjB,EAA8C6R,SA+BhD,OA7BmBgH,EAAgBjX,KAAI,SAAC5B,GACtC,IAKMiZ,EALgBL,EAAgBnX,QACpC,SAACqX,GAAD,OAAOA,EAAEvX,YAAcuX,EAAEvX,WAAW8N,MAAK,SAAC0J,GAAD,OAAOA,EAAE/Y,OAASA,QAIhCoU,QAAO,SAAC/S,EAAGyX,GAKtC,OAJKzX,EAAEyX,EAAE9Y,QACPqB,EAAEyX,EAAE9Y,MAAQ,IAEdqB,EAAEyX,EAAE9Y,MAAMuR,KAAKuH,EAAErZ,KACV4B,IACN,IAEG6X,EAAcjQ,OAAOC,KAAK+P,GAC7BrX,KAAI,SAAC5B,GAAD,MAAW,CACdA,OACA6R,QAASmH,EAAWhZ,GACpB0Y,KAAMO,EAAOjZ,OAEdoB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEqX,KAAKpY,OAASgB,EAAEoX,KAAKpY,UACtCmP,UAEH,MAAO,CACLzP,OACA6M,MAAOqM,MAQQC,CADwD,EAAvCjY,QAEpC,OACE,gCACE,uBACA,cAACoU,EAAA,EAAD,CAAWnT,MAAO,CAAEgG,QAAS,OAA7B,SACE,6EAEF,cAACiR,GAAA,EAAD,UACG7X,EAAWK,KAAI,SAACD,GAAD,OACd,eAAC,GAAD,CAA2BsB,MAAOtB,EAAS3B,KAA3C,UACE,cAAC,GAAD,CAAY0G,KAAM6R,GAAY5W,KAC9B,uBACCA,EAASkL,MAAMjL,KAAI,SAAC4W,GAAD,OAClB,gCACE,4BACE,oBACElQ,KAAMkQ,EAAK3G,QACXtJ,OAAO,SACPC,IAAI,sBAHN,UAKGgQ,EAAKxY,KALR,KAKgBwY,EAAKE,KAAKpY,OAL1B,SAQF,6BACGkY,EAAKE,KAAK9W,KAAI,SAACnC,GAAD,OACb,6BACE,cAAC,IAAD,CAAMsC,GAAE,eAAUtC,GAAlB,SAA0BA,KADnBA,QAKb,yBAjBQ+Y,EAAKxY,WAJP2B,EAAS3B,eCxGzBkB,GAAyBhB,EAAQ,KASjCmZ,GAA8C,SAACxP,GACnD,IAAMyP,EAASC,cACT5X,EAAWyU,OAAOoD,mBAAmBF,EAAO3X,UAC5C+W,EAAO7O,EAAM3I,OAAOO,QAAO,SAACC,GAAD,OAAOA,EAAEC,WAAaA,KACvD,OACE,eAAC,WAAD,WACE,uBACA,+BAAKA,EAAL,MAAkB+W,EAAKpY,OAAvB,WACA,cAAC,EAAD,CAAWY,OAAQwX,QAWnBe,GAAoC,SAAC5P,GACzC,IAAMyP,EAASC,cACT7D,EAAMU,OAAOoD,mBAAmBF,EAAO5D,KACvCgD,EAAO7O,EAAM3I,OAAOO,QAAO,SAACC,GAAD,OAAOA,EAAE+T,MAAQ/T,EAAE+T,KAAKlV,SAASmV,MAClE,OACE,eAAC,WAAD,WACE,uBACA,+BAAKA,EAAL,MAAagD,EAAKpY,OAAlB,WACA,cAAC,EAAD,CAAWY,OAAQwX,QAWnBgB,GAAoC,SAAC7P,GACzC,IAAMyP,EAASC,cACT9Z,EAAM2W,OAAOoD,mBAAmBF,EAAO,IACvCK,EAAU9P,EAAM3I,OAAOmO,MAAK,SAAC3N,GAAD,OAAOA,EAAEjC,MAAQA,KACnD,OAAKka,EAGE,cAAC,GAAD,CAAKla,IAAKA,EAAKyB,OAAQyY,IAFrB,eAAC/J,EAAA,EAAD,CAAOnN,QAAQ,SAAf,mDAA+DhD,MAiD3Dma,GA5CH,WACV,OACE,cAAC,IAAD,UACE,gCACE,cAACvC,GAAD,IACA,cAAC,EAAD,IACA,cAACwC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACtM,EAAA,EAAD,WACE,cAAC,EAAD,CAAStM,OAAQA,KACjB,sBAAM6Y,KAAK,OAAOjY,UAAU,wCAA5B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkY,KAAK,SAAZ,SACE,cAAC,GAAD,CAAU9Y,OAAQA,OAEpB,cAAC,IAAD,CAAO8Y,KAAK,aAAZ,SACE,cAAC,EAAD,CAAW9Y,OAAQA,OAErB,cAAC,IAAD,CAAO8Y,KAAK,sBAAZ,SACE,cAAC,GAAD,CAAe9Y,OAAQA,OAEzB,cAAC,IAAD,CAAO8Y,KAAK,YAAZ,SACE,cAAC,GAAD,CAAU9Y,OAAQA,OAEpB,cAAC,IAAD,CAAO8Y,KAAK,cAAZ,SACE,cAAC,GAAD,CAAqB9Y,OAAQA,OAE/B,cAAC,IAAD,CAAO8Y,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,CAAW9Y,OAAQA,uBCtGrC+Y,SACE,cAAC,aAAD,UACE,cAAC,GAAD,MAEF/E,SAASE,eAAe,W","file":"static/js/main.e5ef6b35.chunk.js","sourcesContent":["export const smallUrl = (url: string): string =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\");\n\nexport const getHostName = (url: string): string =>\n  url\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\")\n    .replace(/^([^/]+)\\/.+$/, \"$1\");\n\nexport const getLastUrlSegment = (url: string): string =>\n  url.substring(url.lastIndexOf(\"/\") + 1);\n\nexport const sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const isToolEnabled = (name: DashlordTool): boolean => {\n  const dashlordConfig: DashlordConfig = require(\"./config.json\");\n  if (!dashlordConfig.tools) return true;\n  if (Array.isArray(dashlordConfig.tools)) {\n    const hasTools = dashlordConfig.tools && dashlordConfig.tools.length;\n    return (\n      !hasTools ||\n      !!(dashlordConfig.tools && dashlordConfig.tools.includes(name))\n    );\n  } else {\n    return dashlordConfig.tools[name] === true;\n  }\n};\n\nexport const letterGradeValue = (grade: string): number => {\n  return (\n    {\n      \"A+\": 200,\n      A: 190,\n      \"A-\": 180,\n      \"B+\": 170,\n      B: 160,\n      \"B-\": 150,\n      \"C+\": 140,\n      C: 130,\n      \"C-\": 120,\n      \"D+\": 110,\n      D: 100,\n      \"D-\": 90,\n      \"E+\": 80,\n      E: 70,\n      \"E-\": 60,\n      \"F+\": 50,\n      F: 40,\n      \"F-\": 30,\n    }[grade] || 0\n  );\n};\n","import * as React from \"react\";\n\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, BarChart, Search } from \"react-feather\";\nimport uniq from \"lodash.uniq\";\n\nimport { smallUrl, sortByKey, isToolEnabled } from \"../utils\";\n\ntype SidebarProps = {\n  report: DashLordReport;\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ report }) => {\n  const sortedReport = (report && report.sort(sortByKey(\"url\"))) || [];\n  const categories = uniq(\n    sortedReport.filter((u) => u.category).map((u) => u.category)\n  ).sort() as string[];\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Accueil\n            </NavLink>\n            <NavLink\n              to=\"/intro\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <BarChart size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Introduction\n            </NavLink>\n          </li>\n        </ul>\n\n        {(categories.length > 1 && (\n          <React.Fragment>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Catégories</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              {categories.map((category) => (\n                <li\n                  className=\"nav-item\"\n                  key={category}\n                  style={{\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  <NavLink\n                    className=\"nav-link\"\n                    to={`/category/${category}`}\n                    activeClassName=\"active\"\n                    exact={true}\n                  >\n                    <BarChart\n                      size={16}\n                      style={{ marginTop: -5, marginRight: 5 }}\n                    />\n                    {category}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          </React.Fragment>\n        )) ||\n          null}\n\n        {isToolEnabled(\"wappalyzer\") && (\n          <div>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Rapports</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              <li\n                className=\"nav-item\"\n                style={{\n                  whiteSpace: \"pre\",\n                }}\n              >\n                <NavLink\n                  className=\"nav-link\"\n                  to={`/wappalyzer`}\n                  activeClassName=\"active\"\n                  exact={true}\n                >\n                  <BarChart\n                    size={16}\n                    style={{ marginTop: -5, marginRight: 5 }}\n                  />\n                  Technologies\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )||null}\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {sortedReport.map((url) => (\n            <li\n              className=\"nav-item\"\n              key={url.url}\n              style={{\n                whiteSpace: \"pre\",\n              }}\n            >\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url.url}`}\n                activeClassName=\"active\"\n                exact={true}\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url.url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Cloud, Info } from \"react-feather\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Topbar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n    style={{ justifyContent: 'space-between' }}\n  >\n    <Link to=\"/\">\n      <div\n        className=\"px-3\"\n        style={{ height: 30, fontSize: \"1.3rem\", color: \"var(--white)\" }}\n      >\n        <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n        DashLord\n      </div>\n    </Link>\n    <Link title=\"À propos\" to=\"/about\" style={{ color: \"white\", marginRight: 5 }}><Info /></Link>\n  </Navbar>\n);\n","import * as React from \"react\";\n\ntype AccessibilityWarningProps = {\n  style?: React.CSSProperties;\n};\n\nexport const AccessibilityWarnings = ({ style }: AccessibilityWarningProps) => (\n  <div style={style}>\n    Moins de 25% des critères d'accessibilité peuvent être testés\n    automatiquement, <strong>une expertise manuelle est requise</strong>.\n    <br />\n    <br />\n    Ce score ne représente pas le score RGAA mais une partie des bonnes\n    pratiques de base à appliquer.\n  </div>\n);\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = {\n  grade: string;\n  label?: string | number | null;\n  small?: boolean;\n};\n\nconst grades = {\n  A: \"success\",\n  B: \"info\",\n  C: \"info\",\n  D: \"warning\",\n  E: \"danger\",\n  F: \"danger\",\n} as Record<string, string>;\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label, small }) => {\n  const newGrade = (grade + \"\").substring(0, 1).toUpperCase();\n  const variant = grades[newGrade] || \"danger\";\n\n  return (\n    <Badge\n      variant={variant}\n      style={{ minWidth: 60, fontSize: small ? \"1.1em\" : \"2em\" }}\n    >\n      {label !== undefined ? label : grade}\n    </Badge>\n  );\n};\n","import orderBy from \"lodash.orderby\";\nimport Tooltip from \"rc-tooltip\";\nimport \"rc-tooltip/assets/bootstrap.css\";\nimport * as React from \"react\";\nimport { useMemo, useState } from \"react\";\nimport {\n  default as BaseTable,\n  AutoResizer,\n  Column,\n  SortOrder,\n} from \"react-base-table\";\nimport \"react-base-table/styles.css\";\nimport { AlertTriangle, Info, Search, Slash } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport { AccessibilityWarnings } from \"../lib/lighthouse/AccessibilityWarnings\";\nimport { isToolEnabled, smallUrl, letterGradeValue } from \"../utils\";\nimport { Grade } from \"./Grade\";\n\ntype DashboardProps = { report: DashLordReport };\n\nconst IconUnknown = () => <Slash size={20} />;\n\ntype ColumnHeaderProps = {\n  title: string;\n  info: string;\n  warning?: React.ReactNode;\n};\n\nconst ColumnHeader: React.FC<ColumnHeaderProps> = ({\n  title,\n  info,\n  warning,\n}) => (\n  <div style={{ textAlign: \"center\" }}>\n    <span style={{ fontSize: \"0.9em\" }}>\n      {title}\n      <br />\n      <Tooltip\n        placement=\"bottom\"\n        trigger={[\"hover\"]}\n        overlay={<div style={{ maxWidth: 300 }}>{info}</div>}\n      >\n        <Info size={16} style={{ cursor: \"pointer\" }} />\n      </Tooltip>\n    </span>\n\n    {warning && (\n      <Tooltip\n        placement=\"bottom\"\n        trigger={[\"hover\"]}\n        overlay={<div style={{ maxWidth: 300 }}>{warning}</div>}\n      >\n        <AlertTriangle\n          size={16}\n          style={{\n            stroke: \"var(--danger)\",\n            marginLeft: 5,\n            cursor: \"pointer\",\n          }}\n        />\n      </Tooltip>\n    )}\n  </div>\n);\n\ntype SortState = {\n  key: string;\n  order: SortOrder;\n  column: { [column: string]: string };\n};\n\nconst defaultSort = {\n  key: \"url\",\n  order: \"asc\",\n  column: { dataKey: \"url\" },\n} as SortState;\n\nconst percent = (num: number | undefined): string =>\n  (num !== undefined && Math.floor(num * 100) + \" %\") || \"-\";\n\nconst defaultColumnProps = {\n  width: 120,\n  sortable: true,\n  align: \"center\",\n} as {\n  width: number;\n  sortable: boolean;\n  align: \"center\" | \"left\" | \"right\";\n};\n\nconst lighthouseColumnProps = ({\n  id,\n  title,\n  info,\n  warning,\n}: {\n  id: string;\n  title: string;\n  info: string;\n  warning?: any;\n}) => ({\n  headerRenderer: () => {\n    return <ColumnHeader title={title} info={info} warning={warning} />;\n  },\n  dataGetter: ({ rowData }: { rowData: any }) => {\n    const summary = (rowData as UrlReport).summary;\n    const scoreKey = `lighthouse_${id}`;\n    //@ts-expect-error\n    if (summary[scoreKey] === undefined) {\n      return -1;\n    }\n    //@ts-expect-error\n    return summary[scoreKey];\n  },\n  cellRenderer: ({ rowData }: { rowData: any }) => {\n    const summary = (rowData as UrlReport).summary;\n    const gradeKey = `lighthouse_${id}Grade`;\n    const scoreKey = `lighthouse_${id}`;\n    return (\n      <Link\n        to={{\n          pathname: `/url/${encodeURIComponent((rowData as UrlReport).url)}`,\n          hash: \"lighthouse\",\n        }}\n      >\n        <GradeBadge\n          //@ts-expect-error\n          grade={summary[gradeKey]}\n          //@ts-expect-error\n          label={percent(summary[scoreKey])}\n        />\n      </Link>\n    );\n  },\n});\n\nconst GradeBadge = ({\n  grade,\n  label,\n}: {\n  grade: string | undefined;\n  label?: string | number | undefined;\n}) => (grade ? <Grade small grade={grade} label={label} /> : <IconUnknown />);\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  const [sortBy, setSortBy] = useState(defaultSort);\n  const onColumnSort = (column: any) => {\n    setSortBy(column);\n  };\n\n  const sortedReport = useMemo(() => {\n    const getSortedRows = (rows: any) => {\n      return orderBy(\n        rows,\n        (row) => {\n          if (sortBy.column.dataGetter) {\n            //@ts-expect-error\n            return sortBy.column.dataGetter({ rowData: row });\n          } else if (sortBy.column.key) {\n            return row[sortBy.column.key];\n          }\n        },\n        sortBy.order\n      );\n    };\n\n    return getSortedRows(report);\n  }, [sortBy, report]);\n  return (\n    <div style={{ width: \"100%\", height: \"calc(100vh - 30px)\" }}>\n      <AutoResizer>\n        {({ width, height }) => (\n          <BaseTable\n            data={sortedReport}\n            width={width}\n            height={height}\n            sortBy={sortBy}\n            onColumnSort={onColumnSort}\n          >\n            <Column\n              key=\"url\"\n              title=\"url\"\n              sortable={true}\n              width={300}\n              flexGrow={1}\n              cellRenderer={({ rowData }) => (\n                <Link\n                  to={`/url/${encodeURIComponent((rowData as UrlReport).url)}`}\n                >\n                  <Search size={16} />\n                  &nbsp;{smallUrl((rowData as UrlReport).url)}\n                </Link>\n              )}\n            />\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"accessibility\"\n                {...lighthouseColumnProps({\n                  id: \"accessibility\",\n                  title: \"Accessibilité\",\n                  info: \"Bonnes pratiques en matière d'accessibilité web (LightHouse)\",\n                  warning: <AccessibilityWarnings />,\n                })}\n              />\n            )}\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"performance\"\n                {...lighthouseColumnProps({\n                  id: \"performance\",\n                  title: \"Performance\",\n                  info: \"Performances de chargement des pages web (LightHouse)\",\n                })}\n              />\n            )}\n            {isToolEnabled(\"lighthouse\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"seo\"\n                {...lighthouseColumnProps({\n                  id: \"seo\",\n                  title: \"SEO\",\n                  info: \"Bonnes pratiques en matière de référencement naturel (LightHouse)\",\n                })}\n              />\n            )}\n\n            {isToolEnabled(\"testssl\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"ssl\"\n                dataGetter={({ rowData }: { rowData: any }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    (summary.testsslGrade &&\n                      letterGradeValue(summary.testsslGrade)) ||\n                    -1\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"SSL\"\n                    info=\"Niveau de confiance du certificat SSL (testssl.sh)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"testssl\",\n                      }}\n                    >\n                      <GradeBadge grade={summary.testsslGrade} />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n\n            {isToolEnabled(\"http\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"http\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    (summary.httpGrade &&\n                      letterGradeValue(summary.httpGrade)) ||\n                    -1\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"HTTP\"\n                    info=\"Bonnes pratiques de configuration HTTP (Mozilla observatory)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"http\",\n                      }}\n                    >\n                      <GradeBadge grade={summary.httpGrade} />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n\n            {isToolEnabled(\"updownio\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"updownio\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return summary.uptime || -1;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Disponibilité\"\n                    info=\"Disponibilité du service (updown.io)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"updownio\",\n                      }}\n                    >\n                      <GradeBadge\n                        grade={summary.uptimeGrade}\n                        label={percent((summary.uptime || 0) / 100)}\n                      />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n            {isToolEnabled(\"updownio\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"updownio2\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return summary.apdex || -1;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"apdex\"\n                    info=\"Apdex: Application Performance Index : indice de satisfaction des attentes de performance (updown.io)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"updownio\",\n                      }}\n                    >\n                      <GradeBadge\n                        grade={summary.apdexGrade}\n                        label={summary.apdex}\n                      />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n\n            {isToolEnabled(\"dependabot\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"dependabot\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return summary.dependabotGrade;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Vulnérabilités\"\n                    info=\"Vulnérabilités applicatives detectées dans les dépendances du code (dependabot)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"dependabot\",\n                      }}\n                    >\n                      <GradeBadge\n                        grade={summary.dependabotGrade}\n                        label={summary.dependabotCount}\n                      />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n\n            {isToolEnabled(\"codescan\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"codescan\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return summary.codescanCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"CodeQL\"\n                    info=\"Potentielles vulnérabilités ou erreurs detectées dans les codes sources (codescan)\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"codescan\",\n                      }}\n                    >\n                      <GradeBadge\n                        grade={summary.codescanGrade}\n                        label={summary.codescanCount}\n                      />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n\n            {isToolEnabled(\"nmap\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"nmap\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    (summary.nmapGrade &&\n                      letterGradeValue(summary.nmapGrade)) ||\n                    -1\n                  );\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Nmap\"\n                    info=\"Vulnérabilités réseau detectées par Nmap\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"nmap\",\n                      }}\n                    >\n                      <GradeBadge grade={summary.nmapGrade} />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n\n            {isToolEnabled(\"nmap\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"nmap2\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return summary.nmapOpenPortsCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Ports ouverts\"\n                    info=\"Ports TCP ouverts détectés par nmap\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"nmap\",\n                      }}\n                    >\n                      <GradeBadge\n                        grade={summary.nmapOpenPortsGrade}\n                        label={summary.nmapOpenPortsCount}\n                      />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n\n            {isToolEnabled(\"thirdparties\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"trackers\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return summary.trackersCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Trackers\"\n                    info=\"Nombre de scripts externes détectés\"\n                    warning={\n                      <div>\n                        Certains scripts externes légitimes peuvent être\n                        considérés comme trackers.\n                      </div>\n                    }\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"thirdparties\",\n                      }}\n                    >\n                      <GradeBadge\n                        grade={summary.trackersGrade}\n                        label={summary.trackersCount}\n                      />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n            {isToolEnabled(\"thirdparties\") && (\n              <Column\n                {...defaultColumnProps}\n                key=\"cookies\"\n                dataGetter={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return summary.cookiesCount;\n                }}\n                headerRenderer={() => (\n                  <ColumnHeader\n                    title=\"Cookies\"\n                    info=\"Nombre de cookies présents\"\n                  />\n                )}\n                cellRenderer={({ rowData }) => {\n                  const summary = (rowData as UrlReport).summary;\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/url/${encodeURIComponent(\n                          (rowData as UrlReport).url\n                        )}`,\n                        hash: \"thirdparties\",\n                      }}\n                    >\n                      <GradeBadge\n                        grade={summary.cookiesGrade}\n                        label={summary.cookiesCount}\n                      />\n                    </Link>\n                  );\n                }}\n              />\n            )}\n          </BaseTable>\n        )}\n      </AutoResizer>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: React.ReactNode;\n  info?: string | React.ReactNode;\n  url?: string;\n  style?: object;\n  className?:string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url, style, className }) => (\n  <Card style={{ marginBottom: 20, ...style }} className={className}>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","import * as React from \"react\";\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: HttpReport };\n\nconst HttpRowBadge = (row: HttpTestReport) => {\n  const scoreModifier = row.score_modifier;\n  const variant =\n    scoreModifier < -50\n      ? \"danger\"\n      : scoreModifier < -30\n      ? \"danger\"\n      : scoreModifier < -20\n      ? \"warning\"\n      : scoreModifier < -10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {scoreModifier}\n    </Badge>\n  );\n};\n\n// some help for remediation\nconst helpDocs = {\n  \"content-security-policy\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://owasp.org/www-community/controls/Content_Security_Policy\"\n      >\n        Doc Content Security Policy\n      </a>\n      . L'extension{\" \"}\n      <a\n        href=\"https://github.com/april/laboratory\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        github.com/april/laboratory\n      </a>{\" \"}\n      permet de générer la CSP pour votre application.\n    </React.Fragment>\n  ),\n  \"x-frame-options\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Headers/X-Frame-Options\"\n      >\n        Doc header X-Frame-Options\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"strict-transport-security\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security\"\n      >\n        Doc header Strict-Transport-Security (HSTS)\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"x-content-type-options\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Headers/X-Content-Type-Options\"\n      >\n        Doc header X-Content-Type-Options\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"x-xss-protection\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection\"\n      >\n        Doc header X-XSS-Protection\n      </a>\n      .\n    </React.Fragment>\n  ),\n  cookies: (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#cookies\"\n      >\n        OWASP Session Management Cheat Sheet\n      </a>\n      .\n    </React.Fragment>\n  ),\n  \"subresource-integrity\": (\n    <React.Fragment>\n      <a\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        href=\"https://developer.mozilla.org/fr/docs/Web/Security/Subresource_Integrity\"\n      >\n        Doc Subresource Integrity\n      </a>\n      .\n    </React.Fragment>\n  ),\n};\n\nexport const HTTP = ({ data }: HTTPProps) => {\n  if (!data.url) {\n    return null;\n  }\n  const url =\n    (data && `https://observatory.mozilla.org/analyze/${smallUrl(data.url)}`) ||\n    null;\n  const failures = Object.keys(data.details)\n    .filter((key) => !data.details[key].pass)\n    .map((key) => data.details[key]);\n  failures.sort((a, b) => a.score_modifier - b.score_modifier);\n\n  return (\n    (url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        <h3>\n          Scan Summary : <Grade small grade={data.grade} />\n        </h3>\n        <br />\n        {(failures.length && (\n          <React.Fragment>\n            <br />\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th style={{ width: 100 }}>impact</th>\n                  <th>description</th>\n                  <th>documentation</th>\n                </tr>\n              </thead>\n              <tbody>\n                {failures.map((failure, i) => (\n                  <tr key={failure.name + i}>\n                    <td>\n                      <HttpRowBadge {...failure} />\n                    </td>\n                    <td>{failure.score_description}</td>\n                    <td>\n                      {\n                        // @ts-expect-error\n                        helpDocs[failure.name] || \"-\"\n                      }\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </React.Fragment>\n        )) ||\n          null}\n      </Panel>\n    )) ||\n    null\n  );\n};\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\nimport { getPerformanceScore } from \"../lib/lighthouse/getPerformanceScore\";\nimport { AccessibilityWarnings } from \"../lib/lighthouse/AccessibilityWarnings\";\n\nconst toTime = (ms: number) => {\n  let minutes = 0,\n    seconds = 0;\n  let rest = ms;\n  if (rest > 60 * 1000) {\n    minutes = Math.floor(rest / 60000);\n    rest -= minutes * 60000;\n  }\n  if (rest > 1000) {\n    seconds = Math.floor(rest / 1000);\n    rest -= seconds * 1000;\n  }\n  if (minutes > 0) {\n    return `${minutes}min ${(seconds / 100).toFixed()}s`;\n  }\n  return `${seconds}.${(rest / 100).toFixed()}s`;\n};\n\nconst toSize = (bytes: number) => {\n  const factor = 1000;\n  let mb = 0,\n    kb = 0;\n  let rest = bytes;\n  if (rest > factor * factor) {\n    mb = Math.floor(rest / (factor * factor));\n    rest -= mb * factor * factor;\n  }\n  if (rest > factor) {\n    kb = Math.floor(rest / factor);\n    rest -= kb * factor;\n  }\n  if (mb > 0) {\n    return `${mb}.${(kb / 100).toFixed()}Mb`;\n  }\n  return `${kb}.${(rest / 100).toFixed()}Kb`;\n};\n\ntype LighthouseProps = { data: LighthouseReport; url: string };\n\nexport const LightHouse: React.FC<LighthouseProps> = ({ data, url }) => {\n  if (!data.audits.metrics.details) {\n    return null;\n  }\n\n  const highlights = {\n    \"First contentful Paint\":\n      data.audits.metrics.details &&\n      data.audits.metrics.details.items &&\n      toTime(data.audits.metrics.details.items[0].firstContentfulPaint),\n    \"Time to interactive\":\n      data.audits.metrics.details &&\n      data.audits.metrics.details.items &&\n      toTime(data.audits.metrics.details.items[0].interactive),\n    \"Total requests\":\n      data.audits.diagnostics.details &&\n      data.audits.diagnostics.details.items &&\n      data.audits.diagnostics.details.items[0].numRequests,\n    \"Total weight\":\n      data.audits.diagnostics.details &&\n      data.audits.diagnostics.details.items &&\n      toSize(data.audits.diagnostics.details.items[0].totalByteWeight),\n    // \"Max server Latency\": toTime(\n    //   data.audits.diagnostics.details.items[0].maxServerLatency\n    //   ),\n  } as object;\n\n  const order = [\"accessibility\", \"performance\", \"seo\", \"best-practices\"];\n\n  // use custom scoring\n  data.categories[\"performance\"].score = getPerformanceScore(data);\n\n  return (\n    <Panel\n      title=\"LightHouse\"\n      info=\"Informations collectées par l'outil Google LightHouse\"\n      url={url}\n    >\n      <Row>\n        <Col xs={12}>\n          <AccessibilityWarnings style={{ marginBottom: 20 }} />\n        </Col>\n        {order.map((key, i: number) => {\n          const category = data.categories[key as LighthouseReportCategoryKey];\n          const score = category.score as number;\n          return (\n            (!isNaN(score) && (\n              <Col\n                key={category.title + i}\n                xs={12}\n                md={6}\n                lg={3}\n                className=\"text-center mb-3\"\n              >\n                <Card>\n                  <Gauge\n                    width={100}\n                    height={60}\n                    value={score * 100}\n                    minValue={0}\n                    maxValue={100}\n                    animationSpeed={32}\n                  />\n                  <Card.Body>\n                    <Card.Title>{category.title}</Card.Title>\n                    <Card.Title\n                      style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                    >\n                      {(score * 100).toFixed() + \"%\"}\n                    </Card.Title>\n                  </Card.Body>\n                </Card>\n              </Col>\n            )) ||\n            null\n          );\n        })}\n      </Row>\n      <Row>\n        {Object.keys(highlights).map((label) => {\n          return (\n            <Col xs={12} md={6} lg={3} key={label} className=\"text-center mb-3\">\n              <Card className=\"text-center\">\n                <Card.Body>\n                  <Card.Title style={{ fontSize: \"0.9rem\" }}>\n                    {label}\n                  </Card.Title>\n                  <Card.Title\n                    style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}\n                  >\n                    {/* @ts-expect-error */}\n                    {highlights[label]}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Panel>\n  );\n};\n","// compute a performance score from 0 to 100 from lighthouse report\nexport const getPerformanceScore = (report: LighthouseReport): number => {\n  const numRequests =\n    report.audits.diagnostics.details?.items &&\n    report.audits.diagnostics.details?.items[0].numRequests;\n  const totalByteWeight =\n    report.audits.diagnostics.details?.items &&\n    report.audits.diagnostics.details?.items[0].totalByteWeight;\n\n  const maxRequests = 50;\n  const maxByteWeight = 1024 * 1024;\n\n  let score = 100;\n\n  // penalty for additional requests : -5 per additionnal request\n  if (numRequests > maxRequests) {\n    score -= Math.min(100 / 2, (numRequests - maxRequests) * 5);\n  }\n  // penalty for big totalByteWeight : -20 per Mb\n  if (totalByteWeight > maxByteWeight) {\n    score -= Math.min(\n      100 / 2,\n      ((totalByteWeight - maxByteWeight) / (1024 * 1024)) * 20\n    );\n  }\n\n  score = Math.max(0, score / 100);\n  return score;\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\nconst NucleiBadge = (row: NucleiReportEntry) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n        ? \"danger\"\n        : severity === \"medium\"\n          ? \"warning\"\n          : severity === \"low\"\n            ? \"info\"\n            : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: NucleiReportEntry, b: NucleiReportEntry) => (\n  nucleiSeverities.indexOf(a.info.severity) -\n  nucleiSeverities.indexOf(b.info.severity)\n);\n\n\ntype NucleiProps = { data: NucleiReport };\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    (rows.length && (\n      <Panel\n        title=\"Nuclei\"\n        info=\"Détection d'erreurs de configuration et vulnérabilités\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }}>severity</th>\n              <th>id</th>\n              <th>name</th>\n              <th>matcher</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((failure: NucleiReportEntry, i: number) => {\n              return (\n                <tr key={failure.templateID + i}>\n                  <td>\n                    <NucleiBadge {...failure} />\n                  </td>\n                  <td>{failure.templateID}</td>\n                  <td>{failure.info.name}</td>\n                  <td>{failure.matcher_name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: ZapReportSiteAlert, b: ZapReportSiteAlert) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: ZapReportSiteAlert) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n        ? \"warning\"\n        : severity === \"2\"\n          ? \"danger\"\n          : severity === \"3\"\n            ? \"danger\"\n            : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: ZapReport; url: string };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data, url }) => {\n  const alerts =\n    data && data.site && data.site.flatMap((site) => site.alerts) || [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length && (\n      <Panel\n        title=\"OWASP\"\n        url={url}\n        info=\"Scan de vulnérabiliés OWASP baseline\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                risk/confidence\n              </th>\n              <th>name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert, i: number) => {\n              return (\n                <tr key={alert.name + i}>\n                  <td className=\"text-center\">\n                    <OwaspBadge {...alert} />\n                  </td>\n                  <td>{alert.name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\nimport { Info } from \"react-feather\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\n\nconst sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nconst severities = [\"INFO\", \"OK\", \"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\"];\nconst getSeverityValue = (severity: string) => severities.indexOf(severity);\n\ntype SSLProps = { data: SslTestReport; url: string };\n\nexport const TestSSL: React.FC<SSLProps> = ({ data, url }) => {\n  const gradeEntry = data.find((entry) => entry.id === \"overall_grade\")\n  const grade =\n    data && gradeEntry && gradeEntry.finding;\n  const results = data.map((entry) => ({\n    ...entry,\n    severity_value: getSeverityValue(entry.severity), // add property for sort\n  }));\n  results.sort(sortByKey(\"severity_value\")).reverse();\n  const capReasons = data.filter((entry) => entry.id.indexOf('grade_cap_reason_') === 0).reverse();\n  return grade && (\n    <Panel title=\"SSL\" info=\"Informations collectées via testssl.sh\" url={url}>\n      <Row>\n        <Col>\n          <h3>\n            Scan Summary : <Grade small grade={grade} />\n          </h3>\n          <br />\n          {capReasons.map((reason: any, i: number) => {\n            return <Alert key={reason.id + i} variant=\"info\"><Info style={{ marginRight: 5 }} />{reason.finding}</Alert>\n          })}\n        </Col>\n      </Row>\n    </Panel>\n  ) || null\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\nimport Flags from \"country-flag-icons/react/3x2\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: ThirdPartiesReport };\n\ntype CookiesTableProps = { cookies: ThirdPartiesReportCookies };\n\nconst CookiesTable: React.FC<CookiesTableProps> = ({ cookies }) =>\n  (cookies && cookies.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={4}>\n            Cookies\n          </th>\n        </tr>\n        <tr>\n          <th>name</th>\n          <th>domain</th>\n          <th className=\"text-center\">httpOnly</th>\n          <th className=\"text-center\">secure</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cookies.map((cookie, i: number) => (\n          <tr key={cookie.name + \"\" + i}>\n            <td>{cookie.name}</td>\n            <td>{cookie.domain}</td>\n            <td className=\"text-center\">{cookie.httpOnly ? \"✔️\" : \"❌\"}</td>\n            <td className=\"text-center\">{cookie.secure ? \"✔️\" : \"❌\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nconst smallLinkify = (url: string) => (\n  <a href={url}>{smallUrl(url).substring(0, 25) + \"...\"}</a>\n);\n\ntype TrackersTableProps = { trackers: ThirdPartiesReportTrackers };\n\nconst TrackersTable: React.FC<TrackersTableProps> = ({ trackers }) =>\n  (trackers && trackers.length && (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={3}>\n            Third-parties ressources\n          </th>\n        </tr>\n        <tr>\n          <th>type</th>\n          <th>url</th>\n          <th>remédiation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {trackers.map((tracker, i: number) => {\n          return (\n            <tr key={tracker.url + i}>\n              <td>{tracker.type}</td>\n              <td>{smallLinkify(tracker.url)}</td>\n              <td>{tracker.details && tracker.details.message}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\ntype EndPointsTableProps = { endpoints: ThirdPartiesReportEndpoints };\n\nconst EndPointsTable: React.FC<EndPointsTableProps> = ({ endpoints }) =>\n  (endpoints && endpoints.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th style={{ width: 100 }}>Flag</th>\n          <th>Hostname</th>\n          <th>IP</th>\n          <th>City</th>\n          <th>Country</th>\n        </tr>\n      </thead>\n      <tbody>\n        {endpoints.map((endpoint, i: number) => {\n          const Flag =\n            (endpoint.geoip &&\n              endpoint.geoip.country &&\n              Flags[endpoint.geoip.country.iso_code]) ||\n            null;\n          return (\n            <tr key={endpoint.hostname + \"-\" + endpoint.ip}>\n              <td className=\"text-center\">\n                {Flag && endpoint.geoip && endpoint.geoip.country && (\n                  <Flag\n                    style={{ width: 60 }}\n                    title={endpoint.geoip.country.names.fr}\n                  />\n                )}\n              </td>\n              <td>{endpoint.hostname}</td>\n              <td>{endpoint.ip}</td>\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.city &&\n                  endpoint.geoip.city.names.fr) ||\n                  \"?\"}\n              </td>\n\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.country &&\n                  endpoint.geoip.country.names.fr) ||\n                  \"?\"}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const hasIssues = [];\n  if (data.cookies && data.cookies.length) {\n    hasIssues.push(...data.cookies);\n  }\n  if (data.trackers && data.trackers.length) {\n    hasIssues.push(...data.trackers);\n  }\n  return (\n    (hasIssues.length && (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <CookiesTable cookies={data.cookies} />\n        <TrackersTable trackers={data.trackers} />\n        <EndPointsTable endpoints={data.endpoints} />\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <Alert variant=\"success\">Aucun script third-party detecté</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\ntype WappalyzerProps = { data: WappalyzerReport };\n\nexport const Wappalyzer: React.FC<WappalyzerProps> = ({ data }) => {\n    return (\n        (data && (\n            <Panel\n                title=\"Wappalyzer\"\n                info=\"Détection des technologies\"\n            >\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={{ width: 250 }}>\n                                name\n                            </th>\n                            <th>categories</th>\n                            <th>website</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.technologies && data.technologies.map((techno: any, i: number) => {\n                            return (\n                                <tr key={techno.name + i}>\n                                    <td>\n                                        {techno.name}\n                                    </td>\n                                    <td>{techno.categories && techno.categories.map((cat: any) => cat.name).join(\", \")}</td>\n                                    <td><a href={techno.website} target=\"_blank\" rel=\"nopoener noreferrer\">{techno.website}</a></td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Panel>\n        )) ||\n        null\n    );\n};\n","import * as React from \"react\";\nimport { Row, Col, Alert, Card } from \"react-bootstrap\";\nimport { format } from \"date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\n\nimport { Panel } from \"./Panel\";\nimport { Gauge } from \"./Gauge\";\nimport { Grade } from \"./Grade\";\nimport { smallUrl } from \"../utils\";\n\ntype UpDownIoProps = { data: UpDownReport; url: string };\n\nexport const UpdownIo: React.FC<UpDownIoProps> = ({ data, url }) => {\n  const urlUpdownio = (data && `https://updown.io/${data.token}`) || null;\n\n  return (\n    (urlUpdownio && smallUrl(data.url) === smallUrl(url) && (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n        url={urlUpdownio}\n      >\n        <Row>\n          <Col xs={12} md={4} className=\"text-center mb-3\">\n            <Card>\n              <Gauge\n                width={100}\n                height={20}\n                value={data.uptime * 100}\n                minValue={0}\n                maxValue={100}\n                animationSpeed={32}\n              />\n              <Card.Body>\n                <Card.Title>\n                  Taux de disponibilité sur un mois glissant\n                </Card.Title>\n                <Card.Title style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}>\n                  {data.uptime + \"%\"}\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </Col>\n\n          {data.metrics && (\n            <Col xs={12} md={4} className=\"text-center mb-3\">\n              <Card>\n                <Gauge\n                  width={100}\n                  height={20}\n                  value={Math.max(0, data.metrics.timings.total)}\n                  minValue={0}\n                  maxValue={1000}\n                  animationSpeed={32}\n                  options={{\n                    percentColors: [\n                      [0, \"#0CCE6B\"],\n                      [0.4, \"#0CCE6B\"],\n                      [0.6, \"#ffa400\"],\n                      [0.8, \"#FF4E42\"],\n                    ],\n                  }}\n                />\n                <Card.Body>\n                  <Card.Title>Temps de réponse</Card.Title>\n                  <Card.Title style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}>\n                    {data.metrics.timings.total + \"ms\"}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          )}\n\n          <Col xs={12} md={4} className=\"text-center mb-3\">\n            {data?.metrics?.apdex !== undefined && (\n              <Card style={{ marginBottom: 10 }}>\n                <Card.Body style={{ padding: 5 }}>\n                  <Card.Title>APDEX</Card.Title>\n                  <div>\n                    <Grade\n                      grade={data.apdexGrade}\n                      label={data.metrics.apdex}\n                    />\n                  </div>\n                </Card.Body>\n              </Card>\n            )}\n\n            {data.ssl && (\n              <Card>\n                <Card.Body style={{ padding: 5 }}>\n                  <Card.Title>\n                    Certificat TLS{\" \"}\n                    {data.ssl.valid ? (\n                      <Grade small grade=\"A+\" label=\"valide\" />\n                    ) : (\n                      <Grade small grade=\"F\" label=\"invalide\" />\n                    )}\n                  </Card.Title>\n                  <div style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}>\n                    expire le{\" \"}\n                    {format(new Date(data.ssl.expires_at), \"dd/MM/yyyy\", {\n                      locale: frLocale,\n                    })}\n                  </div>\n                </Card.Body>\n              </Card>\n            )}\n          </Col>\n        </Row>\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n      >\n        <Alert variant=\"success\">Aucune donnée updown.io associée</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\nimport { getLastUrlSegment } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\nconst orderBySeverity = (a: DependabotNode, b: DependabotNode) => {\n  // high criticity first\n  const severities = new Map();\n  severities.set(\"CRITICAL\", 3);\n  severities.set(\"HIGH\", 2);\n  severities.set(\"MODERATE\", 1);\n  severities.set(\"LOW\", 0);\n  return (\n    severities.get(b.securityVulnerability.severity) -\n    severities.get(a.securityVulnerability.severity)\n  );\n};\n\nconst DependabotBadge = (node: DependabotNode) => {\n  const severity = node.securityVulnerability.severity;\n  const variant =\n    severity === \"LOW\"\n      ? \"info\"\n      : severity === \"MODERATE\"\n      ? \"warning\"\n      : severity === \"HIGH\"\n      ? \"danger\"\n      : severity === \"CRITICAL\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\ntype DependabotProps = { data: DependabotRepository; url: string };\n\nexport const Dependabot: React.FC<DependabotProps> = ({ data, url }) => {\n  const nodes =\n    data && data.vulnerabilityAlerts.totalCount > 0\n      ? data.vulnerabilityAlerts.nodes\n      : [];\n  data.vulnerabilityAlerts.nodes.sort(orderBySeverity);\n  return (\n    (data.vulnerabilityAlerts.totalCount > 0 && (\n      <Panel\n        title=\"Dependabot\"\n        url={data.url + '/security/dependabot'}\n        info={\n          <span>\n            Scan des vulnérabiliés du dépôt Github{\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={data.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {data.url}\n            </a>\n          </span>\n        }\n      >\n      <h3>\n        Scan Summary : <Grade small grade={data.grade} />\n      </h3>\n      <br />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Dépendance vulnérable</th>\n              <th>Vulnérabilités</th>\n            </tr>\n          </thead>\n          <tbody>\n            {nodes.map((node, i: number) => {\n              return (\n                <tr key={node.securityVulnerability.package.name + i}>\n                  <td className=\"text-center\">\n                    <DependabotBadge {...node} />\n                  </td>\n                  <td>{node.securityVulnerability.package.name}</td>\n                  <td>\n                    {node.securityVulnerability.advisory.references.map(\n                      (reference, i: number) => {\n                        return (\n                          <p key={getLastUrlSegment(reference.url) + i}>\n                            <a target=\"_blank\" href={reference.url} rel=\"noopener noreferrer\">\n                              {getLastUrlSegment(reference.url)}\n                            </a>\n                            <br />\n                          </p>\n                        );\n                      }\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\nconst orderBySeverity = (a: CodescanAlert, b: CodescanAlert) => {\n  // high criticity first\n  const severities = new Map();\n  severities.set(\"error\", 1);\n  severities.set(\"warning\", 0);\n  return (\n    severities.get(b.rule.severity) -\n    severities.get(a.rule.severity)\n  );\n};\n\nconst CodescanBadge = (alert: CodescanAlert) => {\n  const severity = alert.rule.severity;\n  const variant =\n    severity === \"warning\"\n      ? \"warning\"\n      : severity === \"error\"\n        ? \"danger\"\n        : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\ntype CodescanProps = { data: CodescanRepository; url: string };\n\nexport const Codescan: React.FC<CodescanProps> = ({ data, url }) => {\n  const alerts =\n    data && data.alerts.length > 0\n      ? data.alerts\n      : [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length > 0 && (\n      <Panel\n        title=\"Codescan\"\n        url={data.url + '/security/code-scanning'}\n        info={\n          <span>\n            Scan du code du dépôt Github{\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={data.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {data.url}\n            </a>\n          </span>\n        }\n      >\n        <h3>\n          Scan Summary : <Grade small grade={data.grade} />\n        </h3>\n        <br />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Règle</th>\n              <th>Descritpion</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert, i: number) => {\n              return (\n                <tr key={alert.rule.name + i}>\n                  <td className=\"text-center\">\n                    <CodescanBadge {...alert} />\n                  </td>\n                  <td>{alert.rule.name}</td>\n                  <td>\n                    <a target=\"_blank\" href={alert.html_url} rel=\"noopener noreferrer\">\n                      {alert.rule.description}\n                    </a>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\nconst sumCvss = (total: number, vulnerability: NmapVulnerability) => {\n  return total + Number.parseFloat(vulnerability.cvss);\n};\n\nconst orderByCvss = (a: NmapOpenPort, b: NmapOpenPort) => {\n  return (\n    b.service.vulnerabilities.reduce(sumCvss, 0) -\n    a.service.vulnerabilities.reduce(sumCvss, 0)\n  );\n};\n\nconst hasExploit = (open_port: NmapOpenPort) => {\n  return (\n    open_port.service.vulnerabilities.filter(\n      (vulnerability) => vulnerability.is_exploit\n    ).length > 0\n  );\n};\n\nconst NmapBadge = (open_port: NmapOpenPort) => {\n  const max = open_port.service.vulnerabilities.reduce(sumCvss, 0);\n  const variant =\n    !hasExploit(open_port) && max > 5 * open_port.service.vulnerabilities.length\n      ? \"warning\"\n      : hasExploit(open_port) &&\n        max > 5 * open_port.service.vulnerabilities.length\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {variant}\n    </Badge>\n  );\n};\n\ntype NmapProps = { data: NmapReport; url: string };\n\nexport const Nmap: React.FC<NmapProps> = ({ data, url }) => {\n  const open_ports = data && data.open_ports.length > 0 ? data.open_ports : [];\n  data.open_ports.sort(orderByCvss);\n  return (\n    (data.open_ports.length > 0 && (\n      <Panel\n        title=\"Nmap\"\n        url={url}\n        info={\n          <span>\n            Scan des vulnérabiliés nmap{\" \"}\n            <a\n              style={{ color: \"white\" }}\n              href={\"https://\" + data.host}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {\"https://\" + data.host}\n            </a>\n          </span>\n        }\n      >\n      <h3>\n        Scan Summary : <Grade small grade={data.grade} />\n      </h3>\n      <br />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Service à l'écoute</th>\n              <th>Vulnérabilités</th>\n            </tr>\n          </thead>\n          <tbody>\n            {open_ports.map((open_port, i: number) => {\n              return (\n                <tr key={open_port.service.name + i}>\n                  <td className=\"text-center\">\n                    <NmapBadge {...open_port} />\n                  </td>\n                  <td>\n                    {open_port.service.name +\n                      \" (port:\" +\n                      open_port.service.id +\n                      \")\"}\n                  </td>\n                  <td>\n                    {open_port.service.vulnerabilities.map(\n                      (vulnerability, i: number) => {\n                        return (\n                          <p key={vulnerability.id + i}>\n                            <a\n                              target=\"_blank\"\n                              href={\n                                \"https://vulners.com/cve/\" + vulnerability.id\n                              }\n                              rel=\"noopener noreferrer\"\n                            >\n                              {vulnerability.id}\n                            </a>\n                            <br />\n                          </p>\n                        );\n                      }\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\nimport { Link } from \"react-router-dom\";\nimport { Clock } from \"react-feather\";\nimport { Jumbotron, Badge } from \"react-bootstrap\";\n\nimport { isToolEnabled } from \"../utils\";\nimport { HTTP } from \"./HTTP\";\nimport { LightHouse } from \"./LightHouse\";\nimport { Nuclei } from \"./Nuclei\";\nimport { Owasp } from \"./Owasp\";\nimport { TestSSL } from \"./TestSSL\";\nimport { Trackers } from \"./Trackers\";\nimport { Wappalyzer } from \"./Wappalyzer\";\nimport { UpdownIo } from \"./UpdownIo\";\nimport { Dependabot } from \"./Dependabot\";\nimport { Codescan } from \"./Codescan\";\nimport { Nmap } from \"./Nmap\";\n\ntype UrlDetailProps = { url: string; report: UrlReport };\n\nconst Anchor = ({ id }: { id: string }) => (\n  <div id={id} style={{ marginBottom: 30 }}></div>\n);\n\nexport const Url: React.FC<UrlDetailProps> = ({ url, report, ...props }) => {\n  const updateDate = report && report.lhr && report.lhr.fetchTime;\n  React.useEffect(() => {\n    const hash = document.location.hash.split(\"#\");\n    if (hash.length === 3) {\n      // double hash + HashRouter workaround\n      const target = document.getElementById(hash[2]);\n      if (target) {\n        target.scrollIntoView();\n      }\n    }\n  }, [report]);\n  if (!report) {\n    return <div>No data available for {url}</div>;\n  }\n  return (\n    <div>\n      <Jumbotron\n        style={{\n          height: 100,\n          marginTop: 10,\n          paddingTop: 20,\n          marginBottom: 10,\n          display: \"flex\",\n        }}\n      >\n        <div style={{ flex: \"1 0 auto\" }}>\n          <h4>\n            <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n              {url}\n            </a>\n          </h4>\n          <p>\n            {report.category && (\n              <Link to={`/category/${report.category}`}>\n                <Badge style={{ marginRight: 5 }} variant=\"success\">\n                  {report.category}\n                </Badge>\n              </Link>\n            )}\n            {report.tags &&\n              report.tags.map((tag: string) => (\n                <Link key={tag} to={`/tag/${tag}`}>\n                  <Badge style={{ marginRight: 5 }} variant=\"info\">\n                    {tag}\n                  </Badge>\n                </Link>\n              ))}\n            {updateDate && (\n              <span title={updateDate}>\n                <Clock size={12} style={{ marginRight: 5 }} />\n                Mise à jour il y a :{\" \"}\n                {formatDistanceToNow(new Date(updateDate), {\n                  locale: frLocale,\n                })}\n              </span>\n            )}\n          </p>\n        </div>\n        <div style={{ flex: \"0 0 100px\", marginTop: -10 }}>\n          {report.screenshot && (\n            <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n              <img\n                alt={`Copie d'écran de ${url}`}\n                style={{\n                  position: \"relative\",\n                  top: 0,\n                  maxHeight: 80,\n                  border: \"1px solid var(--dark)\",\n                }}\n                src={`${process.env.PUBLIC_URL}/report/${window.btoa(\n                  url\n                )}/screenshot.jpeg`}\n              />\n            </a>\n          )}\n        </div>\n      </Jumbotron>\n      {(isToolEnabled(\"lighthouse\") && report.lhr && (\n        <React.Fragment>\n          <Anchor id=\"lighthouse\" />\n          <LightHouse\n            data={report.lhr}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/lhr.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"dependabot\") &&\n        report.dependabot &&\n        report.dependabot.repositories && (\n          <React.Fragment>\n            <Anchor id=\"dependabot\" />\n            {report.dependabot.repositories\n              .filter(Boolean)\n              .map((repository) => {\n                return (\n                  <Dependabot\n                    key={repository.url}\n                    data={repository}\n                    url={url}\n                  />\n                );\n              })}\n            <br />\n          </React.Fragment>\n        )) ||\n        null}\n      {(isToolEnabled(\"codescan\") &&\n        report.codescan &&\n        report.codescan.repositories && (\n          <React.Fragment>\n            <Anchor id=\"codescan\" />\n            {report.codescan.repositories.filter(Boolean).map((repository) => {\n              return (\n                <Codescan key={repository.url} data={repository} url={url} />\n              );\n            })}\n            <br />\n          </React.Fragment>\n        )) ||\n        null}\n      {(isToolEnabled(\"updownio\") && report.updownio && (\n        <React.Fragment>\n          <Anchor id=\"updownio\" />\n          <UpdownIo data={report.updownio} url={url} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"testssl\") && report.testssl && (\n        <React.Fragment>\n          <Anchor id=\"testssl\" />\n          <TestSSL\n            data={report.testssl}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/testssl.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"nmap\") && report.nmap && (\n        <React.Fragment>\n          <Anchor id=\"nmap\" />\n          <Nmap\n            data={report.nmap}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/nmapvuln.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"http\") && report.http && (\n        <React.Fragment>\n          <Anchor id=\"http\" />\n          <HTTP data={report.http} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"thirdparties\") && report.thirdparties && (\n        <React.Fragment>\n          <Anchor id=\"thirdparties\" />\n          <Trackers data={report.thirdparties} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"zap\") && report.zap && (\n        <React.Fragment>\n          <Anchor id=\"zap\" />\n          <Owasp\n            data={report.zap}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/zap.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"nuclei\") && report.nuclei && (\n        <React.Fragment>\n          <Anchor id=\"nuclei\" />\n          <Nuclei data={report.nuclei} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"wappalyzer\") && report.wappalyzer && (\n        <React.Fragment>\n          <Anchor id=\"wappalyzer\" />\n          <Wappalyzer data={report.wappalyzer} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Button, Jumbotron, Alert } from \"react-bootstrap\";\nimport { AlertTriangle, Info } from \"react-feather\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { isToolEnabled } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\n\nconst dashlordConfig: DashlordConfig  = require(\"../config.json\");\n\nexport const Intro: React.FC = () => {\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>{dashlordConfig.title || \"DashLord\"}</h1>\n        <br />\n        Le tableau de bord aggrège les données issues de plusieurs\n        outils qui évaluent chaque URL indépendamment.\n        <br />\n        <br />\n        L'évaluation des outils ne remplace en aucun cas une expertise manuelle,\n        et seule la page d'accueil du site est ici évaluée.\n        <br />\n        <br />\n        Vous pouvez soumettre de nouvelles URLs, proposer des corrections ou\n        consulter la roadmap en{\" \"}\n        <a\n          href=\"https://github.com/SocialGouv/dashlord/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          cliquant ici\n        </a>\n        .\n        <br /><br />\n        <br />\n        <Link to=\"/dashboard\">\n          <Button variant=\"dark\">Accéder au tableau de bord</Button>\n        </Link>\n      </Jumbotron>\n\n      {isToolEnabled(\"lighthouse\") && <Panel title=\"Google Lighthouse\">\n        Permet un audit automatique de page web :\n        <br />\n        <br />\n        <li>Performances de chargement</li>\n        <li>Bonnes pratiques SEO (référencement)</li>\n        <li>Bonnes pratiques accessibilité (moteur Axe)</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Les mesures de performance, sont un instantané, donc pas forcément\n          représentatives\n          <br />\n          <AlertTriangle size={16} style={{ marginRight: 5 }} /> Les mesures\n          d'accessibilité n'abordent pas du tout{\" \"}\n          <a\n            href=\"https://www.numerique.gouv.fr/publications/rgaa-accessibilite/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            le RGAA\n          </a>\n          .\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://developers.google.com/web/tools/lighthouse\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"dependabot\") && <Panel title=\"Dependabot\">\n        Recense les vulnérabilités de tes dépendances dans ton code\n        <br />\n        <br />\n        <li>Scan des vulnérabilités de tes dépendances sur le dépôt Github du code</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://dependabot.com/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://docs.github.com/en/code-security/supply-chain-security/about-alerts-for-vulnerable-dependencies\"\n        >\n          Security scans\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"codescan\") && <Panel title=\"Codescan\">\n        Recense les potentielles vulnérabilités dans ton code\n        <br />\n        <br />\n        <li>Scan des potentielles vulnérabilités sur le dépôt Github du code</li>\n        <li>Possibilité d'activer autant de scanner souhaité: CodeQL, etc</li>\n        <li>Liste restreinte de langages couverts: C/C++, C#, Go, Java, JavaScript/TypeScript, Python</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://docs.github.com/en/code-security/secure-coding/about-code-scanning\">\n          Documentation\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"nmap\") && <Panel title=\"Nmap\">\n        Nmap scan les vulnérabilités d'une machine (IP) associée à un domaine\n        <br />\n        <br />\n        <li>Scan des ports ouverts avec vulnérabilités grâce au script vulners</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://nmap.org\"\n          style={{ marginLeft: 5 }}>\n          Nmap\n        </Button>\n        <Button variant=\"dark\" href=\"https://nmap.org/nsedoc/scripts/vulners.html\">\n          NSE vulners\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"zap\") && <Panel title=\"OWASP Zed Attack Proxy\">\n        Scan de vulnérabilités passif \"baseline\" qui permet de détecter des\n        risques de sécurité.\n        <br />\n        <br />\n        <li>Bonnes pratiques web</li>\n        <li>Bonnes pratiques http</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://www.zaproxy.org/docs/docker/baseline-scan/\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"testssl\") && <Panel title=\"testssl.sh\">\n        Évalue le niveau de confiance d'un certificat SSL\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Protocoles disponibles</li>\n        <li>Compatibilité navigateurs</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <br />\n        <Button variant=\"dark\" href=\"https://testssl.sh/\">\n          Site officiel\n        </Button>\n        &nbsp;\n        <Button variant=\"dark\" href=\"https://github.com/drwetter/testssl.sh\">\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"http\") && <Panel title=\"Mozilla HTTP observatory\">\n        Évalue le niveau de qualité/sécurité de la page web et de son serveur\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Bonnes pratiques web</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://observatory.mozilla.org/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://github.com/mozilla/http-observatory/blob/master/httpobs/docs/scoring.md\"\n        >\n          Méthodologie\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"updownio\") && <Panel title=\"Updown.io\">\n        Évalue les temps de réponse de son serveur\n        <br />\n        <br />\n        <li>Disponibilité du site web avec calcul régulier de l'APDEX</li>\n        <li>Validité des certificats TLS</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://updown.io/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://updown.uservoice.com/knowledgebase/articles/915588-what-is-apdex\"\n        >\n          APDEX\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"nuclei\") && <Panel title=\"Nucléi\">\n        Détecte plus de 700 erreurs de configuration courantes sur les\n        applications webs.\n        <br />\n        <br />\n        <li>Sécurité</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://nuclei.projectdiscovery.io/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"Third-parties\">\n        Liste tous les scripts externes chargés par une URL et qui peuvent avoir\n        un impact sur :\n        <br />\n        <br />\n        <li>Performances web</li>\n        <li>Sécurité</li>\n        <li>Vie privée</li>\n        <br />\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Certains script légitimes peuvent apparaitre dans cette catégorie\n          s'ils sont hébergés sur d'autres serveurs\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://github.com/SocialGouv/thirdparties\"\n        >\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"GeoIP2\">\n        Géolocalise tous les serveurs contactés lors de l'ouverture d'une URL.\n        <br />\n        <br />\n        <li>Vie privée</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.maxmind.com/en/geoip-demo\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"wappalyzer\") && <Panel title=\"Wappalyzer\">\n        Wappalyzer reconnait +1500 technologies web, Javascript, CMS, outillage...\n        <br />\n        <br />\n        <li>Stack technique</li>\n        <li>Obsolescence</li>\n        <li>Parc</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.wappalyzer.com/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import * as React from \"react\";\n\nimport { Jumbotron } from \"react-bootstrap\";\n\n\n\nexport const About: React.FC = () => {\n    return (\n        <div>\n            <br />\n            <Jumbotron style={{ padding: \"2em\", textAlign: \"center\" }}>\n                <h1>À propos</h1>\n            </Jumbotron>\n            <div style={{ margin: '0 auto', maxWidth: '80%' }}>\n                <br />\n                  DashLord est <strong>100% open source</strong>, vous pouvez y contribuer en créant de la documentation, en proposant du code, ou encore en partageant vos questions <a href=\"https://github.com/socialgouv/dashlord\" target=\"_blank\" rel=\"noopener noreferrer\">sur le repository github</a>.\n\n               < br /> <br />\n\n                 L'objectif de DashLord est d'identifier des points d'attention mais aussi de proposer des solutions actionnables.\n                 < br /> <br />\n\n                 DashLord est né à la <a href=\"https://fabrique.social.gouv.fr\" target=\"_blank\" rel=\"noopener noreferrer\" > Fabrique des ministères sociaux</a > pour répondre aux besoins d'évaluation et de mise en oeuvre des bonnes pratiques de développement web.\n                  < br /> <br />\n                Vous pouvez facilement créer votre propre DashLord pour vos URLs en suivant <a href=\"https://github.com/SocialGouv/dashlord/blob/main/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">les instructions sur le GitHub</a>.\n            </div>\n        </div >\n    );\n};\n","import * as React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nimport { Jumbotron, CardColumns } from \"react-bootstrap\";\nimport uniq from \"lodash.uniq\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Panel } from \"./Panel\";\n\ntype UsageChartProps = { data: any };\n\nconst UsageChart: React.FC<UsageChartProps> = ({ data }) => {\n  return (\n      <BarChart\n        width={300}\n        height={200}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n      </BarChart>\n  );\n};\n\nconst toChartData = (category: WappalyzerParsedCategory) =>\n  category.items.map((item) => ({\n    name: item.name,\n    count: item.urls.length,\n  }));\n\ntype WappalyzerDashboardProps = { report: DashLordReport };\n\ntype WappalyzerParsedCategory = {\n  name: string;\n  items: {\n    name: string;\n    website: string | undefined;\n    urls: string[];\n  }[];\n};\n\nconst getCategoriesByUrl = (report: DashLordReport) => {\n  const allTechnologies = report\n    .flatMap((url) => ({ url, wappalyzer: url.wappalyzer }))\n    .filter(({ url, wappalyzer }) => !!wappalyzer)\n    .flatMap(\n      ({ url, wappalyzer }) =>\n        (wappalyzer &&\n          wappalyzer.technologies.map((details) => ({\n            ...details,\n            url: url.url,\n          }))) ||\n        []\n    );\n  const categoriesNames = uniq(\n    allTechnologies.flatMap(\n      (t) => t.categories && t.categories.map((c) => c.name)\n    )\n  );\n\n  const getTechUrl = (name: string) =>\n    allTechnologies.find((t) => t.name === name)?.website;\n\n  const categories = categoriesNames.map((name) => {\n    const categoryTechs = allTechnologies.filter(\n      (t) => t.categories && t.categories.find((c) => c.name === name)\n    );\n\n    // group techs by name and sort by count desc\n    const byTech = categoryTechs.reduce((a, t) => {\n      if (!a[t.name]) {\n        a[t.name] = [];\n      }\n      a[t.name].push(t.url);\n      return a;\n    }, {} as Record<string, any>);\n\n    const sortedTechs = Object.keys(byTech)\n      .map((name) => ({\n        name,\n        website: getTechUrl(name),\n        urls: byTech[name] as string[],\n      }))\n      .sort((a, b) => a.urls.length - b.urls.length)\n      .reverse();\n\n    return {\n      name,\n      items: sortedTechs,\n    };\n  });\n\n  return categories;\n};\n\nexport const WappalyzerDashboard = ({ report }: WappalyzerDashboardProps) => {\n  const categories = getCategoriesByUrl(report);\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>Wappalyzer : technologies détectées</h1>\n      </Jumbotron>\n      <CardColumns>\n        {categories.map((category) => (\n          <Panel key={category.name} title={category.name}>\n            <UsageChart data={toChartData(category)} />\n            <br/>\n            {category.items.map((item) => (\n              <div key={item.name}>\n                <b>\n                  <a\n                    href={item.website}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {item.name} ({item.urls.length})\n                  </a>\n                </b>\n                <ul>\n                  {item.urls.map((url) => (\n                    <li key={url}>\n                      <Link to={`/url/${url}`}>{url}</Link>\n                    </li>\n                  ))}\n                </ul>\n                <br />\n              </div>\n            ))}\n          </Panel>\n        ))}\n      </CardColumns>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Container, Row, Alert } from \"react-bootstrap\";\n\nimport {\n  useParams,\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { Sidebar } from \"./components/Sidebar\";\nimport { Topbar } from \"./components/Topbar\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Url } from \"./components/Url\";\nimport { Intro } from \"./components/Intro\";\nimport { ScrollToTop } from  \"./components/ScrollToTop\";\nimport { About } from \"./components/About\";\nimport { WappalyzerDashboard } from \"./components/WappalyzerDashboard\";\n\nconst report: DashLordReport = require(\"./report.json\");\n\ntype CategoryRouteProps = { report: DashLordReport };\n\n// for some reason react-router `:url*` didnt work, use `*` only\ninterface CategoryParamTypes {\n  category: string;\n}\n\nconst CategoryRoute: React.FC<CategoryRouteProps> = (props) => {\n  const params = useParams<CategoryParamTypes>();\n  const category = window.decodeURIComponent(params.category);\n  const urls = props.report.filter((u) => u.category === category)\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{category} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface TagParamTypes {\n  tag: string;\n}\n\ntype TagRouteProps = { report: DashLordReport };\n\nconst TagRoute: React.FC<TagRouteProps> = (props) => {\n  const params = useParams<TagParamTypes>();\n  const tag = window.decodeURIComponent(params.tag);\n  const urls = props.report.filter((u) => u.tags && u.tags.includes(tag))\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{tag} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface UrlParamTypes {\n  \"0\": string;\n}\n\ntype UrlRouteProps = { report: DashLordReport };\n\nconst UrlRoute: React.FC<UrlRouteProps> = (props) => {\n  const params = useParams<UrlParamTypes>();\n  const url = window.decodeURIComponent(params[\"0\"]);\n  const urlData = props.report.find((u) => u.url === url);\n  if (!urlData) {\n    return <Alert variant=\"danger\">Impossible de trouver le rapport pour {url}</Alert>\n  }\n  return <Url url={url} report={urlData} />\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <ScrollToTop />\n        <Topbar />\n        <Container fluid>\n          <Row>\n            <Sidebar report={report} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/*\">\n                  <UrlRoute report={report} />\n                </Route>\n                <Route path=\"/dashboard\">\n                  <Dashboard report={report} />\n                </Route>\n                <Route path=\"/category/:category\">\n                  <CategoryRoute report={report} />\n                </Route>\n                <Route path=\"/tag/:tag\">\n                  <TagRoute report={report} />\n                </Route>\n                <Route path=\"/wappalyzer\">\n                  <WappalyzerDashboard report={report} />\n                </Route>\n                <Route path=\"/intro\">\n                  <Intro />\n                </Route>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/\">\n                  <Dashboard report={report} />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
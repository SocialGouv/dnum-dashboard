{"version":3,"sources":["utils.ts","components/Sidebar.tsx","components/Topbar.tsx","components/Grade.tsx","components/Dashboard.tsx","components/Panel.tsx","components/HTTP.tsx","components/Gauge.tsx","components/LightHouse.tsx","components/Nuclei.tsx","components/Owasp.tsx","components/TestSSL.tsx","components/Trackers.tsx","components/Wappalyser.tsx","components/Url.tsx","components/Intro.tsx","components/ScrollToTop.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","sortByKey","key","a","b","Sidebar","sortedReport","report","sort","categories","uniq","filter","u","category","map","Nav","className","to","activeClassName","exact","size","style","marginTop","marginRight","length","whiteSpace","Topbar","Navbar","variant","bg","sticky","expand","height","fontSize","color","Grade","grade","label","small","newGrade","substring","toUpperCase","Badge","undefined","scoreToGrade","score","x1","x2","grades","split","Math","min","floor","IconUnknown","ColumnHeader","title","info","placement","trigger","overlay","marginLeft","Dashboard","Alert","href","target","rel","Table","striped","bordered","hover","urlReport","count","events","lhrCategories","lhr","a11y","accessibility","webPerf","performance","seo","ssl","testssl","find","entry","id","finding","http","owaspAlerts","zap","site","flatMap","alerts","riskcode","owaspCount","owaspGrade","maxSeverity","max","o","parseInt","getOwaspGrade","trackersCount","thirdparties","trackers","trackersGrade","cookiesCount","cookies","cookiesGrade","getGradeCookies","nucleiCount","nuclei","nucleiGrade","n","severity","encodeURIComponent","toFixed","Panel","children","Card","Title","background","padding","fontWeight","float","Body","HttpRowBadge","row","abs","score_modifier","HTTP","data","failures","Object","keys","details","pass","width","failure","i","name","score_description","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","set","value","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","strokeColor","generateGradient","highDpiSupport","toTime","ms","minutes","seconds","rest","toSize","bytes","factor","mb","kb","LightHouse","audits","metrics","highlights","items","firstContentfulPaint","interactive","diagnostics","numRequests","totalByteWeight","Row","Col","xs","md","lg","NucleiBadge","nucleiSeverities","nucleiOrder","indexOf","Nuclei","rows","templateID","matcher_name","orderBySeverity","order","confidence","OwaspBadge","riskdesc","Owasp","alert","severities","TestSSL","severity_value","reverse","capReasons","reason","CookiesTable","marginBottom","colSpan","cookie","domain","httpOnly","secure","TrackersTable","tracker","type","message","EndPointsTable","endpoints","endpoint","Flag","geoip","country","Flags","iso_code","names","fr","hostname","ip","city","Trackers","hasIssues","push","Wappalyser","console","log","technologies","techno","cat","join","website","Url","updateDate","fetchTime","Jumbotron","paddingTop","tags","tag","formatDistanceToNow","Date","locale","frLocale","process","window","btoa","wappalyser","Intro","Button","ScrollToTop","pathname","useLocation","scrollTo","CategoryRoute","params","useParams","decodeURIComponent","urls","UrlRoute","urlData","r","App","Container","fluid","role","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6efa5b67.chunk.js","sourcesContent":["export const smallUrl = (url: string) =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\");\n\nexport const getHostName = (url: string) =>\n  url\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\")\n    .replace(/^([^/]+)\\/.+$/, \"$1\");\n\nexport const sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n","import * as React from \"react\";\n\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, BarChart, Search } from \"react-feather\";\nimport uniq from \"lodash.uniq\"\n\nimport { smallUrl, sortByKey } from \"../utils\";\n\ntype SidebarProps = {\n  report: any;\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ report }) => {\n  const sortedReport = report.sort(sortByKey(\"url\"));\n  const categories = uniq(sortedReport.filter((u: any) => u.category).map((u: any) => u.category)).sort() as string[];\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Accueil\n            </NavLink>\n            <NavLink\n              to=\"/dashboard\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <BarChart size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Tableau de bord\n            </NavLink>\n          </li>\n        </ul>\n\n        {categories.length && <React.Fragment>\n          <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n            <span>Catégories</span>\n          </h6>\n          <ul className=\"nav flex-column\">\n            {categories.map((category: string) => (\n              <li\n                className=\"nav-item\"\n                key={category}\n                style={{\n                  whiteSpace: \"pre\",\n                }}\n              >\n                <NavLink\n                  className=\"nav-link\"\n                  to={`/category/${category}`}\n                  activeClassName=\"active\"\n                  exact={true}\n                >\n                  <BarChart size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                  {category}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        </React.Fragment> || null}\n\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {sortedReport.map((url: any) => (\n            <li\n              className=\"nav-item\"\n              key={url.url}\n              style={{\n                whiteSpace: \"pre\",\n              }}\n            >\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url.url}`}\n                activeClassName=\"active\"\n                exact={true}\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url.url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Cloud } from \"react-feather\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Topbar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n  >\n    <Link to=\"/\">\n      <div\n        className=\"px-3\"\n        style={{ height: 30, fontSize: \"1.3rem\", color: \"var(--white)\" }}\n      >\n        <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n        DashLord\n      </div>\n    </Link>\n    {/*<FormControl\n      type=\"text\"\n      placeholder=\"Search url\"\n      className=\" form-control-dark w-100\"\n    />*/}\n  </Navbar>\n);\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = { grade: string; label?: string; small?: boolean };\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label, small }) => {\n  const newGrade = grade.substring(0, 1).toUpperCase();\n  const variant =\n    newGrade === \"F\"\n      ? \"danger\"\n      : newGrade === \"E\"\n      ? \"danger\"\n      : newGrade === \"D\"\n      ? \"warning\"\n      : newGrade === \"C\"\n      ? \"info\"\n      : newGrade === \"B\"\n      ? \"info\"\n      : newGrade === \"A\"\n      ? \"success\"\n      : \"danger\";\n  return (\n    <Badge variant={variant} style={{ fontSize: small ? \"1.3em\" : \"2em\" }}>\n      {label !== undefined ? label : grade}\n    </Badge>\n  );\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\nimport { Slash, Info, Search } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"rc-tooltip\";\n\nimport { Grade } from \"./Grade\";\nimport { sortByKey, smallUrl } from \"../utils\";\n\nimport \"rc-tooltip/assets/bootstrap.css\";\n\ntype DashboardProps = { report: any };\n\nconst remap = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst scoreToGrade = (score: number) => {\n  const grades = \"A,B,C,D,E,F\".split(\",\");\n\n  const newGrade = Math.min(\n    grades.length - 1,\n    Math.floor(remap(score, 0, 1, 0, 6))\n  );\n\n  return grades[newGrade];\n};\n\nconst IconUnknown = () => <Slash size={20} />;\n\nconst getGradeTrackers = (count: number) => {\n  return count > 10 ? \"F\" : count > 2 ? \"C\" : count > 0 ? \"B\" : \"A\";\n};\n\nconst getGradeCookies = (count: number) => {\n  return count > 10\n    ? \"F\"\n    : count > 5\n      ? \"E\"\n      : count > 2\n        ? \"C\"\n        : count > 0\n          ? \"B\"\n          : \"A\";\n};\n\nconst getNucleiGrade = (events: any) => {\n  return events.filter(\n    (n: any) => n.info.severity === \"critical\" || n.info.severity === \"high\"\n  ).length\n    ? \"F\"\n    : events.length\n      ? \"B\"\n      : \"A\";\n};\n\nconst getOwaspGrade = (owaspAlerts: any) => {\n  const maxSeverity = Math.max(\n    ...owaspAlerts.map((o: any) => parseInt(o.riskcode) || 0)\n  );\n\n  return maxSeverity > 3\n    ? \"F\"\n    : maxSeverity > 2\n      ? \"D\"\n      : maxSeverity > 1\n        ? \"C\"\n        : maxSeverity > 0\n          ? \"B\"\n          : \"A\";\n};\n\ntype ColumnHeaderProps = {\n  title: string;\n  info: string;\n};\n\nconst ColumnHeader: React.FC<ColumnHeaderProps> = ({ title, info }) => (\n  <th className=\"text-center\">\n    <Tooltip\n      placement=\"bottom\"\n      trigger={[\"hover\"]}\n      overlay={<span>{info}</span>}\n    >\n      <span>\n        {title} <Info size={16} style={{ marginLeft: 5 }} />\n      </span>\n    </Tooltip>\n  </th>\n);\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  const sortedReport = report.sort(sortByKey(\"url\"));\n  return (\n    <div>\n      <br />\n      <Alert variant=\"info\">\n        Cliquez sur une des URLs pour obtenir le détail. Si votre\n        URL est manquante,{\" \"}\n        <a\n          href=\"https://github.com/SocialGouv/dnum-dashboard/issues/new\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          ajoutez-là ici\n        </a>\n        .\n      </Alert>\n      <br />\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>url</th>\n            <ColumnHeader\n              title=\"Accessibilité\"\n              info=\"Bonnes pratiques en matière d'accessibilité web\"\n            />\n            <ColumnHeader\n              title=\"Performance\"\n              info=\"Performances de chargement des pages web\"\n            />\n            <ColumnHeader\n              title=\"SEO\"\n              info=\"Bonnes pratiques en matière de référencement naturel\"\n            />\n            <ColumnHeader\n              title=\"SSL\"\n              info=\"Niveau de sécurité du certificat SSL\"\n            />\n            <ColumnHeader\n              title=\"HTTP\"\n              info=\"Bonnes pratiques de configuration HTTP\"\n            />\n            <ColumnHeader\n              title=\"OWASP\"\n              info=\"Bonnes pratiques de sécurité OWASP\"\n            />\n            <ColumnHeader\n              title=\"Trackers\"\n              info=\"Nombre de scripts externes présents\"\n            />\n            <ColumnHeader title=\"Cookies\" info=\"Nombre de cookies présents\" />\n            <ColumnHeader title=\"Nuclei\" info=\"Erreurs de configuration\" />\n          </tr>\n        </thead>\n        <tbody>\n          {sortedReport.map((urlReport: any) => {\n            // compute values\n\n            // LightHouse\n            const lhrCategories = urlReport.lhr && urlReport.lhr.categories;\n            const a11y =\n              lhrCategories && (lhrCategories.accessibility.score as number);\n            const webPerf =\n              lhrCategories && (lhrCategories.performance.score as number);\n            const seo = lhrCategories && (lhrCategories.seo.score as number);\n\n            // SSL\n            const ssl =\n              urlReport.testssl && urlReport.testssl.find((entry: any) => entry.id === \"overall_grade\") && urlReport.testssl.find((entry: any) => entry.id === \"overall_grade\").finding;\n\n            // HTTP\n            const http = urlReport.http && urlReport.http.grade;\n\n            // OWASP\n            const owaspAlerts =\n              (urlReport.zap &&\n                urlReport.zap.site &&\n                urlReport.zap.site.flatMap((site: any) =>\n                  site.alerts.filter((a: any) => a.riskcode !== \"0\")\n                )) ||\n              [];\n            const owaspCount = urlReport.zap && owaspAlerts.length;\n            const owaspGrade = getOwaspGrade(owaspAlerts);\n\n            // TRACKERS\n            const trackersCount =\n              (urlReport.thirdparties &&\n                urlReport.thirdparties.trackers &&\n                urlReport.thirdparties.trackers.length) ||\n              0;\n            const trackersGrade = getGradeTrackers(trackersCount);\n\n            // COOKIES\n            const cookiesCount =\n              (urlReport.thirdparties &&\n                urlReport.thirdparties.cookies &&\n                urlReport.thirdparties.cookies.length) ||\n              0;\n            const cookiesGrade = getGradeCookies(cookiesCount);\n\n            // NUCLEI\n            const nucleiCount = urlReport.nuclei && urlReport.nuclei.length;\n            const nucleiGrade =\n              urlReport.nuclei && getNucleiGrade(urlReport.nuclei);\n\n            return (\n              <tr key={urlReport.url}>\n                <td>\n                  <Link to={`/url/${encodeURIComponent(urlReport.url)}`}>\n                    <Search size={16} /> {smallUrl(urlReport.url)}\n                  </Link>\n                </td>\n                <td className=\"text-center\">\n                  {lhrCategories ? (\n                    <Grade\n                      small\n                      grade={scoreToGrade(1 - a11y)}\n                      label={(a11y * 100).toFixed() + \" %\"}\n                    />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {lhrCategories ? (\n                    <Grade\n                      small\n                      grade={scoreToGrade(1 - webPerf)}\n                      label={(webPerf * 100).toFixed() + \" %\"}\n                    />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {lhrCategories ? (\n                    <Grade\n                      small\n                      grade={scoreToGrade(1 - seo)}\n                      label={(seo * 100).toFixed() + \" %\"}\n                    />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {ssl ? <Grade small grade={ssl} /> : <IconUnknown />}\n                </td>\n                <td className=\"text-center\">\n                  {http ? <Grade small grade={http} /> : <IconUnknown />}\n                </td>\n                <td className=\"text-center\">\n                  {owaspCount ? (\n                    <Grade small grade={owaspGrade} label={owaspCount} />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {urlReport.thirdparties ? (\n                    <Grade small grade={trackersGrade} label={trackersCount} />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {urlReport.thirdparties ? (\n                    <Grade small grade={cookiesGrade} label={cookiesCount} />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {urlReport.nuclei ? (<Grade small grade={nucleiGrade} label={nucleiCount} />) : (\n                    <IconUnknown />\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: any;\n  info?: string;\n  url?: string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url }) => (\n  <Card>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: any };\n\nconst HttpRowBadge = (row: any) => {\n  const severity = Math.abs(row.score_modifier);\n  const variant =\n    severity > 50\n      ? \"danger\"\n      : severity > 30\n      ? \"danger\"\n      : severity > 20\n      ? \"warning\"\n      : severity > 10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nexport const HTTP: React.FC<HTTPProps> = ({ data }) => {\n  if (!data.url) {\n    return null;\n  }\n  const url =\n    (data && `https://observatory.mozilla.org/analyze/${smallUrl(data.url)}`) ||\n    null;\n  const failures = Object.keys(data.details)\n    .filter((key) => !data.details[key].pass)\n    .map((key) => data.details[key]);\n  failures.sort((a, b) => a.score_modifier - b.score_modifier);\n\n  return (\n    url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        <h3>\n          Scan Summary : <Grade small grade={data.grade} />\n        </h3>\n        <br />\n        <br />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }}>impact</th>\n              <th>id</th>\n              <th>description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {failures.map((failure, i) => (\n              <tr key={failure.name + i}>\n                <td>\n                  <HttpRowBadge {...failure} />\n                </td>\n                <td>{failure.name}</td>\n\n                <td>{failure.score_description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Panel>\n    )\n  );\n};\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\n\ntype Category = {\n  score: number;\n  [any: string]: any;\n};\n\ntype LightHouseProps = { data: any, url: string };\n\nconst toTime = (ms: number) => {\n  let minutes = 0,\n    seconds = 0;\n  let rest = ms;\n  if (rest > 60 * 1000) {\n    minutes = Math.floor(rest / 60000);\n    rest -= minutes * 60000;\n  }\n  if (rest > 1000) {\n    seconds = Math.floor(rest / 1000);\n    rest -= seconds * 1000;\n  }\n  if (minutes > 0) {\n    return `${minutes}min ${(seconds / 100).toFixed()}s`;\n  }\n  return `${seconds}.${(rest / 100).toFixed()}s`;\n};\n\nconst toSize = (bytes: number) => {\n  const factor = 1000;\n  let mb = 0,\n    kb = 0;\n  let rest = bytes;\n  if (rest > factor * factor) {\n    mb = Math.floor(rest / (factor * factor));\n    rest -= mb * factor * factor;\n  }\n  if (rest > factor) {\n    kb = Math.floor(rest / factor);\n    rest -= kb * factor;\n  }\n  if (mb > 0) {\n    return `${mb}.${(kb / 100).toFixed()}Mb`;\n  }\n  return `${kb}.${(rest / 100).toFixed()}Kb`;\n};\n\nexport const LightHouse: React.FC<LightHouseProps> = ({ data, url }) => {\n\n  if (!data.audits.metrics.details) {\n    return null\n  }\n  const highlights = {\n    \"First contentful Paint\": toTime(\n      data.audits.metrics.details.items[0].firstContentfulPaint\n    ),\n    \"Time to interactive\": toTime(\n      data.audits.metrics.details.items[0].interactive\n    ),\n    \"Total requests\": data.audits.diagnostics.details.items[0].numRequests,\n    \"Total weight\": toSize(\n      data.audits.diagnostics.details.items[0].totalByteWeight\n    ),\n    // \"Max server Latency\": toTime(\n    //   data.audits.diagnostics.details.items[0].maxServerLatency\n    // ),\n  } as object;\n\n  const order = [\"accessibility\", \"performance\", \"seo\", \"best-practices\"];\n\n  return (\n    <Panel\n      title=\"LightHouse\"\n      info=\"Informations collectées par l'outil Google LightHouse\"\n      url={url}\n    >\n      <Row>\n        {order.map((key: any, i: number) => {\n          const category = data.categories[key] as Category;\n          return (\n            <Col\n              key={category.title + i}\n              xs={12}\n              md={6}\n              lg={3}\n              className=\"text-center mb-3\"\n            >\n              <Card>\n                <Gauge\n                  width={100}\n                  height={60}\n                  value={category.score * 100}\n                  minValue={0}\n                  maxValue={100}\n                  animationSpeed={32}\n                />\n                <Card.Body>\n                  <Card.Title>{category.title}</Card.Title>\n                  <Card.Title\n                    style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                  >\n                    {(category.score * 100).toFixed() + \"%\"}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n      <Row >\n        {Object.keys(highlights).map((label) => {\n          return (\n            <Col xs={3} key={label}>\n              <Card className=\"text-center\">\n                <Card.Body>\n                  <Card.Title style={{ fontSize: \"0.9rem\" }}>\n                    {label}\n                  </Card.Title>\n                  <Card.Title\n                    style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}\n                  >\n                    {/* @ts-expect-error */}\n                    {highlights[label]}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Panel>\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\ntype NucleiProps = { data: any };\n\nconst NucleiBadge = (row: any) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n      ? \"danger\"\n      : severity === \"medium\"\n      ? \"warning\"\n      : severity === \"low\"\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: any, b: any) => {\n  return (\n    nucleiSeverities.indexOf(a.info.severity) -\n    nucleiSeverities.indexOf(b.info.severity)\n  );\n};\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    (rows.length && (\n      <Panel\n        title=\"Nuclei\"\n        info=\"Détection d'erreurs de configuration et vulnérabilités\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }}>severity</th>\n              <th>id</th>\n              <th>name</th>\n              <th>matcher</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((failure: any, i: number) => {\n              return (\n                <tr key={failure.templateID + i}>\n                  <td>\n                    <NucleiBadge {...failure} />\n                  </td>\n                  <td>{failure.templateID}</td>\n                  <td>{failure.info.name}</td>\n                  <td>{failure.matcher_name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: any, b: any) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: any) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n        ? \"warning\"\n        : severity === \"2\"\n          ? \"danger\"\n          : severity === \"3\"\n            ? \"danger\"\n            : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: any; url: string };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data, url }) => {\n  const alerts =\n    data && data.site && data.site.flatMap((site: any) => site.alerts) || [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length && (\n      <Panel\n        title=\"OWASP\"\n        url={url}\n        info=\"Scan de vulnérabiliés OWASP baseline\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                risk/confidence\n              </th>\n              <th>name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert: any, i: number) => {\n              return (\n                <tr key={alert.name + i}>\n                  <td className=\"text-center\">\n                    <OwaspBadge {...alert} />\n                  </td>\n                  <td>{alert.name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\nimport { Info } from \"react-feather\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\n\nconst sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\n//const grades = [\"A+\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"]\n\nconst severities = [\"INFO\", \"OK\", \"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\"];\nconst getSeverityValue = (severity: string) => severities.indexOf(severity);\n\ntype SSLProps = { data: any; url: string };\n\nexport const TestSSL: React.FC<SSLProps> = ({ data, url }) => {\n  const grade =\n    data && data.find((entry: any) => entry.id === \"overall_grade\").finding;\n  const results = data.map((row: any) => ({\n    ...row,\n    severity_value: getSeverityValue(row.severity),\n  }));\n  results.sort(sortByKey(\"severity_value\")).reverse();\n  const capReasons = data.filter((entry: any) => entry.id.indexOf('grade_cap_reason_') === 0).reverse();\n  return (\n    data &&\n    data.length && (\n      <Panel title=\"SSL\" info=\"Informations collectées via testssl.sh\" url={url}>\n        <Row>\n          <Col>\n            <h3>\n              Scan Summary : <Grade small grade={grade} />\n            </h3>\n            <br />\n            {capReasons.map((reason: any) => {\n              return <Alert key={reason.id} variant=\"info\"><Info style={{ marginRight: 5 }} />{reason.finding}</Alert>\n            })}\n          </Col>\n        </Row>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\nimport Flags from \"country-flag-icons/react/3x2\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: any };\n\ntype CookiesTableProps = { cookies: any[] };\n\nconst CookiesTable: React.FC<CookiesTableProps> = ({ cookies }) =>\n  (cookies && cookies.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={4}>\n            Cookies\n          </th>\n        </tr>\n        <tr>\n          <th>name</th>\n          <th>domain</th>\n          <th className=\"text-center\">httpOnly</th>\n          <th className=\"text-center\">secure</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cookies.map((cookie: any, i: number) => (\n          <tr key={cookie.templateID + \"\" + i}>\n            <td>{cookie.name}</td>\n            <td>{cookie.domain}</td>\n            <td className=\"text-center\">{cookie.httpOnly ? \"✔️\" : \"❌\"}</td>\n            <td className=\"text-center\">{cookie.secure ? \"✔️\" : \"❌\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nconst smallLinkify = (url: string) => (\n  <a href={url}>{smallUrl(url).substring(0, 25) + \"...\"}</a>\n);\n\ntype TrackersTableProps = { trackers: any[] };\n\nconst TrackersTable: React.FC<TrackersTableProps> = ({ trackers }) =>\n  (trackers && trackers.length && (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={3}>\n            Third-parties ressources\n          </th>\n        </tr>\n        <tr>\n          <th>type</th>\n          <th>url</th>\n          <th>remédiation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {trackers.map((tracker: any, i: number) => {\n          return (\n            <tr key={tracker.url + i}>\n              <td>{tracker.type}</td>\n              <td>{smallLinkify(tracker.url)}</td>\n              <td>{tracker.details && tracker.details.message}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\ntype EndPointsTableProps = { endpoints: any[] };\n\nconst EndPointsTable: React.FC<EndPointsTableProps> = ({ endpoints }) =>\n  (endpoints && endpoints.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th style={{ width: 100 }}>Flag</th>\n          <th>Hostname</th>\n          <th>IP</th>\n          <th>City</th>\n          <th>Country</th>\n        </tr>\n      </thead>\n      <tbody>\n        {endpoints.map((endpoint: any, i: number) => {\n          const Flag =\n            (endpoint.geoip &&\n              endpoint.geoip.country &&\n              Flags[endpoint.geoip.country.iso_code]) ||\n            null;\n          return (\n            <tr key={endpoint.hostname + \"-\" + endpoint.ip}>\n              <td className=\"text-center\">\n                {Flag && (\n                  <Flag\n                    style={{ width: 60 }}\n                    title={endpoint.geoip.country.names.fr}\n                  />\n                )}\n              </td>\n              <td>{endpoint.hostname}</td>\n              <td>{endpoint.ip}</td>\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.city &&\n                  endpoint.geoip.city.names.fr) ||\n                  \"?\"}\n              </td>\n\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.country &&\n                  endpoint.geoip.country.names.fr) ||\n                  \"?\"}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const hasIssues = [];\n  if (data.cookies && data.cookies.length) {\n    hasIssues.push(...data.cookies);\n  }\n  if (data.trackers && data.trackers.length) {\n    hasIssues.push(...data.trackers);\n  }\n  return (\n    (hasIssues.length && (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <CookiesTable cookies={data.cookies} />\n        <TrackersTable trackers={data.trackers} />\n        <EndPointsTable endpoints={data.endpoints} />\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <Alert variant=\"success\">Aucun script third-party detecté</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\ntype WappalyserProps = { data: any };\n\nexport const Wappalyser: React.FC<WappalyserProps> = ({ data }) => {\n    console.log('Wapp', data);\n    return (\n        (data && (\n            <Panel\n                title=\"Wappalyser\"\n                info=\"Détection des technologies\"\n            >\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={{ width: 250 }}>\n                                name\n              </th>\n                            <th>categories</th>\n                            <th>website</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.technologies && data.technologies.map((techno: any, i: number) => {\n                            return (\n                                <tr key={techno.name + i}>\n                                    <td>\n                                        {techno.name}\n                                    </td>\n                                    <td>{techno.categories && techno.categories.map((cat: any) => cat.name).join(\", \")}</td>\n                                    <td><a href={techno.website} target=\"_blank\" rel=\"nopoener noreferrer\">{techno.website}</a></td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Panel>\n        )) ||\n        null\n    );\n};\n","import * as React from \"react\";\nimport { formatDistanceToNow } from 'date-fns'\nimport frLocale from \"date-fns/locale/fr\";\nimport { Link } from \"react-router-dom\";\nimport { Clock } from \"react-feather\";\nimport { Jumbotron, Badge } from \"react-bootstrap\";\n\nimport { HTTP } from \"./HTTP\";\nimport { LightHouse } from \"./LightHouse\";\nimport { Nuclei } from \"./Nuclei\";\nimport { Owasp } from \"./Owasp\";\nimport { TestSSL } from \"./TestSSL\";\nimport { Trackers } from \"./Trackers\";\nimport { Wappalyser } from \"./Wappalyser\";\n\ntype UrlDetailProps = { url: string; report: any };\n\nexport const Url: React.FC<UrlDetailProps> = ({ url, report, ...props }) => {\n  const updateDate = report.lhr && report.lhr.fetchTime;\n  return (\n    <div>\n      <Jumbotron\n        style={{ height: 100, marginTop: 10, paddingTop: 20, marginBottom: 10 }}\n      >\n        <h4>\n          <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n            {url}\n          </a>\n        </h4>\n        <p>\n          <Link to={`/category/${report.category}`}>\n            <Badge style={{ marginRight: 5 }} variant=\"success\">\n              {report.category}\n            </Badge>\n          </Link>\n          {report.tags.map((tag: string) => (\n            <Badge key={tag} style={{ marginRight: 5 }} variant=\"info\">\n              {tag}\n            </Badge>\n          ))}\n          {updateDate && (\n            <span title={updateDate}>\n              <Clock size={12} style={{ marginRight: 5 }} />\n              Mise à jour il y a :{\" \"}\n              {formatDistanceToNow(new Date(updateDate), { locale: frLocale })}\n            </span>\n          )}\n        </p>\n      </Jumbotron>\n      {(report.lhr && (\n        <React.Fragment>\n          <LightHouse\n            data={report.lhr}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/lhr.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(report.testssl && (\n        <React.Fragment>\n          <TestSSL\n            data={report.testssl}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/testssl.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(report.http && (\n        <React.Fragment>\n          <HTTP data={report.http} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(report.nuclei && (\n        <React.Fragment>\n          <Nuclei data={report.nuclei} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(report.thirdparties && (\n        <React.Fragment>\n          <Trackers data={report.thirdparties} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(report.zap && (\n        <React.Fragment>\n          <Owasp\n            data={report.zap}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/zap.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(report.wappalyser && (\n        <React.Fragment>\n          <Wappalyser data={report.wappalyser} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Button, Jumbotron, Alert } from \"react-bootstrap\";\nimport { AlertTriangle, Info } from \"react-feather\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Panel } from \"./Panel\";\n\nexport const Intro: React.FC = () => {\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>DashLord</h1>\n        <br />\n        Le tableau de bord aggrège les données issues de plusieurs\n        outils qui évaluent chaque URL indépendamment.\n        <br />\n        <br />\n        L'évaluation des outils ne remplace en aucun cas une expertise manuelle,\n        et seule la page d'accueil du site est ici évaluée.\n        <br />\n        <br />\n        Vous pouvez soumettre de nouvelles URLs, proposer des corrections ou\n        consulter la roadmap en{\" \"}\n        <a\n          href=\"https://github.com/SocialGouv/dnum-dashboard/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          cliquant ici\n        </a>\n        .\n        <br />\n        <br />\n        <Link to=\"/dashboard\">\n          <Button variant=\"dark\">Accéder au tableau de bord</Button>\n        </Link>\n      </Jumbotron>\n\n      <Panel title=\"Google Lighthouse\">\n        Permet un audit automatique de page web :\n        <br />\n        <br />\n        <li>Performances de chargement</li>\n        <li>Bonnes pratiques SEO (référencement)</li>\n        <li>Bonnes pratiques accessibilité (moteur Axe)</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Les mesures de performance, sont un instantané, donc pas forcément\n          représentatives\n          <br />\n          <AlertTriangle size={16} style={{ marginRight: 5 }} /> Les mesures\n          d'accessibilité n'abordent pas du tout{\" \"}\n          <a\n            href=\"https://www.numerique.gouv.fr/publications/rgaa-accessibilite/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            le RGAA\n          </a>\n          .\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://developers.google.com/web/tools/lighthouse\"\n        >\n          Site officiel\n        </Button>\n      </Panel>\n      <br />\n\n      <Panel title=\"OWASP Zed Attack Proxy\">\n        Scan de vulnérabilités passif \"baseline\" qui permet de détecter des\n        risques de sécurité.\n        <br />\n        <br />\n        <li>Bonnes pratiques web</li>\n        <li>Bonnes pratiques http</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://www.zaproxy.org/docs/docker/baseline-scan/\"\n        >\n          Site officiel\n        </Button>\n      </Panel>\n      <br />\n\n      <Panel title=\"testssl.sh\">\n        Évalue le niveau de confiance d'un certificat SSL\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Protocoles disponibles</li>\n        <li>Compatibilité navigateurs</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <br />\n        <Button variant=\"dark\" href=\"https://testssl.sh/\">\n          Site officiel\n        </Button>\n        &nbsp;\n        <Button variant=\"dark\" href=\"https://github.com/drwetter/testssl.sh\">\n          Code source\n        </Button>\n      </Panel>\n      <br />\n\n      <Panel title=\"Mozilla HTTP observatory\">\n        Évalue le niveau de qualité/sécurité de la page web et de son serveur\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Bonnes pratiques web</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://observatory.mozilla.org/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://github.com/mozilla/http-observatory/blob/master/httpobs/docs/scoring.md\"\n        >\n          Méthodologie\n        </Button>\n      </Panel>\n      <br />\n\n      <Panel title=\"Nucléi\">\n        Détecte plus de 700 erreurs de configuration courantes sur les\n        applications webs.\n        <br />\n        <br />\n        <li>Sécurité</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://nuclei.projectdiscovery.io/\">\n          Site officiel\n        </Button>\n      </Panel>\n      <br />\n\n      <Panel title=\"Third-parties\">\n        Liste tous les scripts externes chargés par une URL et qui peuvent avoir\n        un impact sur :\n        <br />\n        <br />\n        <li>Performances web</li>\n        <li>Sécurité</li>\n        <li>Vie privée</li>\n        <br />\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Certains script légitimes peuvent apparaitre dans cette catégorie\n          s'ils sont hébergés sur d'autres serveurs\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://github.com/SocialGouv/thirdparties\"\n        >\n          Code source\n        </Button>\n      </Panel>\n      <br />\n\n      <Panel title=\"GeoIP2\">\n        Géolocalise tous les serveurs contactés lors de l'ouverture d'une URL.\n        <br />\n        <br />\n        <li>Vie privée</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.maxmind.com/en/geoip-demo\">\n          Site officiel\n        </Button>\n      </Panel>\n      <br />\n\n      <Panel title=\"Wappalyser\">\n        Wappalyzer reconnait +1500 technologies web, Javascript, CMS, outillage...\n        <br />\n        <br />\n        <li>Stack technique</li>\n        <li>Obsolescence</li>\n        <li>Parc</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.wappalyzer.com/\">\n          Site officiel\n        </Button>\n      </Panel>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import * as React from \"react\";\n\nimport { Container, Row } from \"react-bootstrap\";\n\nimport {\n  useParams,\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport report from \"./report.json\";\n\nimport { Sidebar } from \"./components/Sidebar\";\nimport { Topbar } from \"./components/Topbar\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Url } from \"./components/Url\";\nimport { Intro } from \"./components/Intro\";\nimport { ScrollToTop } from \"./components/ScrollToTop\";\n\ntype CategoryRouteProps = { report: any };\n\n// for some reason react-router `:url*` didnt work, use `*` only\ninterface ParamTypes {\n  \"0\": string;\n}\n\nconst CategoryRoute: React.FC<CategoryRouteProps> = (props) => {\n  const params = useParams<ParamTypes>();\n  const category = window.decodeURIComponent(params[\"0\"]);\n  const urls = props.report.filter((u: any) => u.category === category)\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{category} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ntype UrlRouteProps = { report: any };\n\nconst UrlRoute: React.FC<UrlRouteProps> = (props) => {\n  const params = useParams<ParamTypes>();\n  const url = window.decodeURIComponent(params[\"0\"]);\n  const urlData = props.report.find((r: any) => r.url === url) as any;\n  console.log('urlData', urlData)\n  return <Url url={url} report={urlData} />\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <ScrollToTop />\n        <Topbar />\n        <Container fluid>\n          <Row>\n            <Sidebar report={report} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/*\">\n                  <UrlRoute report={report} />\n                </Route>\n                <Route path=\"/dashboard\">\n                  <Dashboard report={report} />\n                </Route>\n                <Route path=\"/category/*\">\n                  <CategoryRoute report={report} />\n                </Route>\n                <Route path=\"/\">\n                  <Intro />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}